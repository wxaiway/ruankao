/**
 * 题目数据文件 - 自动生成，请勿手动编辑
 * 生成时间: 2025/9/22 19:39:23
 */

import { Question } from '@/lib/questions';

export const questionsData: Question[] = [
  {
    "id": "0001",
    "title": "关于安全的问题(第1空)",
    "type": "single-choice",
    "content": "# 1-2.安全性可划分为多种特性。其中，（ ）保证信息不泄露给未授权的用户、实体或过程；（ ）保证信息的完整和准确，防止信息被非法修改。\n\n\n**第一个空：**\n\nA. 不可否认性\nB. 机密性\nC. 可控性\nD. 完整性\n\n## 解析\n\n机密性保证信息不泄露给未授权的用户、实体或过程；\n完整性保证信息的完整和准确，防止信息被非法修改；\n不可否认性是指防止发送方否认发送过信息；\n可控性保证对信息的传播及内容具有控制的能力，防止为非法者所用。\n",
    "options": [
      {
        "key": "A",
        "text": "不可否认性"
      },
      {
        "key": "B",
        "text": "机密性"
      },
      {
        "key": "C",
        "text": "可控性"
      },
      {
        "key": "D",
        "text": "完整性"
      }
    ],
    "correctAnswer": "B",
    "explanation": "<p>机密性保证信息不泄露给未授权的用户、实体或过程；<br>完整性保证信息的完整和准确，防止信息被非法修改；<br>不可否认性是指防止发送方否认发送过信息；<br>可控性保证对信息的传播及内容具有控制的能力，防止为非法者所用。</p>\n",
    "tags": {
      "knowledge": [
        "信息安全",
        "数据安全"
      ],
      "chapters": [
        "ch11"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2024年下半年真题第1题"
  },
  {
    "id": "0002",
    "title": "关于安全的问题(第2空)",
    "type": "single-choice",
    "content": "# 1-2.安全性可划分为多种特性。其中，（ ）保证信息不泄露给未授权的用户、实体或过程；（ ）保证信息的完整和准确，防止信息被非法修改。\n\n\n**第二个空：**\n\nA. 可控性\nB. 不可否认性\nC. 机密性\nD. 完整性\n\n## 解析\n\n机密性保证信息不泄露给未授权的用户、实体或过程；\n完整性保证信息的完整和准确，防止信息被非法修改；\n不可否认性是指防止发送方否认发送过信息；\n可控性保证对信息的传播及内容具有控制的能力，防止为非法者所用。\n",
    "options": [
      {
        "key": "A",
        "text": "可控性"
      },
      {
        "key": "B",
        "text": "不可否认性"
      },
      {
        "key": "C",
        "text": "机密性"
      },
      {
        "key": "D",
        "text": "完整性"
      }
    ],
    "correctAnswer": "D",
    "explanation": "<p>机密性保证信息不泄露给未授权的用户、实体或过程；<br>完整性保证信息的完整和准确，防止信息被非法修改；<br>不可否认性是指防止发送方否认发送过信息；<br>可控性保证对信息的传播及内容具有控制的能力，防止为非法者所用。</p>\n",
    "tags": {
      "knowledge": [
        "信息安全",
        "数据安全"
      ],
      "chapters": [
        "ch11"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2024年下半年真题第2题"
  },
  {
    "id": "0003",
    "title": "关于安全的问题(第1空)",
    "type": "single-choice",
    "content": "# 4-5.数据安全治理的目标主要包括（ ）三个方面。数据安全治理体系是组织达成数据安全治理目标需要具备的能力框架，其中数据分类分级属于该体系中的（ ）。\n\n\n**第一个空：**\n\nA. 满足用户需求、满足技术安全规范、促进数据开发利用\nB. 满足合规需求、管理用户安全风险、满足数据安全规范\nC. 满足用户需求、管理用户安全风险、促进数据开发利用\nD. 满足合规要求、管理数据安全风险、促进数据开发利用\n\n## 解析\n\n![image.png](https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/8oLl952owjMJ4lap/img/42fdcb55-104d-4548-8e5b-e0e47bbe4b97.png)\n",
    "options": [
      {
        "key": "A",
        "text": "满足用户需求、满足技术安全规范、促进数据开发利用"
      },
      {
        "key": "B",
        "text": "满足合规需求、管理用户安全风险、满足数据安全规范"
      },
      {
        "key": "C",
        "text": "满足用户需求、管理用户安全风险、促进数据开发利用"
      },
      {
        "key": "D",
        "text": "满足合规要求、管理数据安全风险、促进数据开发利用"
      }
    ],
    "correctAnswer": "D",
    "explanation": "<p><img src=\"https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/8oLl952owjMJ4lap/img/42fdcb55-104d-4548-8e5b-e0e47bbe4b97.png\" alt=\"image.png\"></p>\n",
    "tags": {
      "knowledge": [
        "信息安全",
        "数据安全"
      ],
      "chapters": [
        "ch11"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2024年下半年真题第4题"
  },
  {
    "id": "0004",
    "title": "关于安全的问题(第2空)",
    "type": "single-choice",
    "content": "# 4-5.数据安全治理的目标主要包括（ ）三个方面。数据安全治理体系是组织达成数据安全治理目标需要具备的能力框架，其中数据分类分级属于该体系中的（ ）。\n\n\n**第二个空：**\n\nA. 数据全生命周期安全层\nB. 访问权限控制层\nC. 数据安全战略层\nD. 基础安全层\n\n## 解析\n\n![image.png](https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/8oLl952owjMJ4lap/img/42fdcb55-104d-4548-8e5b-e0e47bbe4b97.png)\n",
    "options": [
      {
        "key": "A",
        "text": "数据全生命周期安全层"
      },
      {
        "key": "B",
        "text": "访问权限控制层"
      },
      {
        "key": "C",
        "text": "数据安全战略层"
      },
      {
        "key": "D",
        "text": "基础安全层"
      }
    ],
    "correctAnswer": "D",
    "explanation": "<p><img src=\"https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/8oLl952owjMJ4lap/img/42fdcb55-104d-4548-8e5b-e0e47bbe4b97.png\" alt=\"image.png\"></p>\n",
    "tags": {
      "knowledge": [
        "信息安全",
        "数据安全"
      ],
      "chapters": [
        "ch11"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2024年下半年真题第5题"
  },
  {
    "id": "0005",
    "title": "关于死锁的问题",
    "type": "single-choice",
    "content": "# 7.下列选项中不能作为预防死锁措施的是（ ）。\n\nA. 破坏“循环等待”条件\nB. 破坏“不可抢占”条件\nC. 破坏“互斥”条件\nD. 破坏“请求和保持”条件\n\n## 解析\n\n互斥：某种资源一次只允许一个进程访问，即该资源一旦分配给某个进程，其他进程就不能再访问，直到该进程访问结束。\n请求和保持：一个进程本身占有资源（一种或多种），同时还有资源未得到满足，正在等待其他进程释放该资源。\n不可抢占：别人已经占有了某项资源，你不能因为自己也需要该资源，就去把别人的资源抢过来。\n循环等待：存在一个进程链，使得每个进程都占有下一个进程所需的至少一种资源。\n产生死锁需要四个条件，那么，只要这四个条件中至少有一个条件得不到满足，就不可能发生死锁了。由于互斥条件是非共享资源所必须的，不仅不能改变，还应加以保证，所以，主要是破坏产生死锁的其他三个条件。\n",
    "options": [
      {
        "key": "A",
        "text": "破坏“循环等待”条件"
      },
      {
        "key": "B",
        "text": "破坏“不可抢占”条件"
      },
      {
        "key": "C",
        "text": "破坏“互斥”条件"
      },
      {
        "key": "D",
        "text": "破坏“请求和保持”条件"
      }
    ],
    "correctAnswer": "C",
    "explanation": "<p>互斥：某种资源一次只允许一个进程访问，即该资源一旦分配给某个进程，其他进程就不能再访问，直到该进程访问结束。<br>请求和保持：一个进程本身占有资源（一种或多种），同时还有资源未得到满足，正在等待其他进程释放该资源。<br>不可抢占：别人已经占有了某项资源，你不能因为自己也需要该资源，就去把别人的资源抢过来。<br>循环等待：存在一个进程链，使得每个进程都占有下一个进程所需的至少一种资源。<br>产生死锁需要四个条件，那么，只要这四个条件中至少有一个条件得不到满足，就不可能发生死锁了。由于互斥条件是非共享资源所必须的，不仅不能改变，还应加以保证，所以，主要是破坏产生死锁的其他三个条件。</p>\n",
    "tags": {
      "knowledge": [
        "操作系统",
        "内存管理",
        "进程管理"
      ],
      "chapters": [
        "ch01"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2024年下半年真题第7题"
  },
  {
    "id": "0006",
    "title": "关于传输层的问题",
    "type": "single-choice",
    "content": "# 8.（ ）是在传输层定义的协议。\n\nA. NFS和Telnet\nB. TCP和UDP\nC. FTP和SMTP\nD. IP和ICMP\n\n## 解析\n\n![image.png](https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/8oLl952owjMJ4lap/img/18001e2b-ac35-48fc-8a8c-a4f7555b3511.png)\n",
    "options": [
      {
        "key": "A",
        "text": "NFS和Telnet"
      },
      {
        "key": "B",
        "text": "TCP和UDP"
      },
      {
        "key": "C",
        "text": "FTP和SMTP"
      },
      {
        "key": "D",
        "text": "IP和ICMP"
      }
    ],
    "correctAnswer": "B",
    "explanation": "<p><img src=\"https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/8oLl952owjMJ4lap/img/18001e2b-ac35-48fc-8a8c-a4f7555b3511.png\" alt=\"image.png\"></p>\n",
    "tags": {
      "knowledge": [
        "计算机网络",
        "网络协议"
      ],
      "chapters": [
        "ch03"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2024年下半年真题第8题"
  },
  {
    "id": "0007",
    "title": "关于进程的问题",
    "type": "single-choice",
    "content": "# 9.当一个进程被一个更高优先级的进程抢占或其时间片用完时，其状态会从执行态转变为（ ）。\n\nA. 阻塞态\nB. 就绪态\nC. 睡眠态\nD. 挂起态\n\n## 解析\n\n三种基本状态转换：\n就绪→执行：处于就绪状态的任务，当任务调度程序为之分配了处理机后，该任务便由就绪状态转变成执行状态。\n执行→就绪：处于执行状态的任务在其执行过程中，因分配给它的一个时间片已用完而不得不让出处理机，于是任务从执行状态转变成就绪状态。\n执行→阻塞：正在执行的任务因等待某种事件发生而无法继续执行时，便从执行状态变成阻塞状态。\n阻塞→就绪：处于阻塞状态的任务，若其等待的事件已经发生，于是任务由阻塞状态转变为就绪状态。\n",
    "options": [
      {
        "key": "A",
        "text": "阻塞态"
      },
      {
        "key": "B",
        "text": "就绪态"
      },
      {
        "key": "C",
        "text": "睡眠态"
      },
      {
        "key": "D",
        "text": "挂起态"
      }
    ],
    "correctAnswer": "B",
    "explanation": "<p>三种基本状态转换：<br>就绪→执行：处于就绪状态的任务，当任务调度程序为之分配了处理机后，该任务便由就绪状态转变成执行状态。<br>执行→就绪：处于执行状态的任务在其执行过程中，因分配给它的一个时间片已用完而不得不让出处理机，于是任务从执行状态转变成就绪状态。<br>执行→阻塞：正在执行的任务因等待某种事件发生而无法继续执行时，便从执行状态变成阻塞状态。<br>阻塞→就绪：处于阻塞状态的任务，若其等待的事件已经发生，于是任务由阻塞状态转变为就绪状态。</p>\n",
    "tags": {
      "knowledge": [
        "操作系统",
        "内存管理",
        "进程管理"
      ],
      "chapters": [
        "ch01"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2024年下半年真题第9题"
  },
  {
    "id": "0009",
    "title": "关于关系的问题",
    "type": "single-choice",
    "content": "# 11.执行本单位的任务所完成的职务发明创造，包括退休、调离原单位后或者劳动、人事关系终止后（ ）内作出的，与其在原单位承担的本职工作或者原单位分配的任务有关的发明创造。\n\nA. 3个月\nB. 1年\nC. 6个月\nD. 18个月\n\n## 解析\n\n(一)在本职工作中作出的发明创造;\n(二)履行本单位交付的本职工作之外的任务所作出的发明创造;\n(三)退休、调离原单位后或者劳动、人事关系终止后1年内作出的，与其在原\n单位承担的本职工作或者原单位分配的任务有关的发明创造。\n",
    "options": [
      {
        "key": "A",
        "text": "3个月"
      },
      {
        "key": "B",
        "text": "1年"
      },
      {
        "key": "C",
        "text": "6个月"
      },
      {
        "key": "D",
        "text": "18个月"
      }
    ],
    "correctAnswer": "B",
    "explanation": "<p>(一)在本职工作中作出的发明创造;<br>(二)履行本单位交付的本职工作之外的任务所作出的发明创造;<br>(三)退休、调离原单位后或者劳动、人事关系终止后1年内作出的，与其在原<br>单位承担的本职工作或者原单位分配的任务有关的发明创造。</p>\n",
    "tags": {
      "knowledge": [
        "数据库系统",
        "数据库设计"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2024年下半年真题第11题"
  },
  {
    "id": "0012",
    "title": "关于数据库的问题",
    "type": "single-choice",
    "content": "# 14.数据库中有一张人员信息表包含性别属性，要求这个属性的值只能是男或者女，这属于（ ）。\n\nA. 关系完整性\nB. 用户定义完整性\nC. 参照完整性\nD. 实体完整性\n\n## 解析\n\n(1)实体完整性 (Entity Integrity)。 实体完整性规则要求每个数据表都必须有主键，而作为主键的所有字段，其属性必须是唯一且非空值。\n(2)参照完整性 (Referential Integrity)。 现实世界中的实体之间往往存在某种联系，在关系模型中实体及实体间的联系是用关系来描述的，这样自然就存在着关系与关系间的引用。\n(3)用户定义完整性 (User Defined Integrity)。 就是针对某一具体的关系数据库的约束条件，反映某一具体应用所涉及的数据必须满足的语义要求，由应用的环境决定。例如，银行的用户账户规定必须大于等于100000,小于999999。\n题目中提到的是“人员信息表包含性别属性，且这个属性的值只能是男或者女”。这是一个具体的约束条件，用于限制性别属性的取值范围。这个约束不是由数据库系统自带的，而是根据实际应用需求自定义的。\n**2024年11月第15题**\n15.在多道批处理系统中有P1和P2两个作业，执行顺序如下，P1（计算40ms，I/O操作60ms，计算20ms），P2（计算100ms，I/O操作40ms，计算40ms），P2比P1晚20ms到达，在不考虑调度和切换时间的情况下完成两道作业最少需要（ ）时间。\nA. 240ms\nB. 200ms\nC. 260ms\nD. 220ms\n![image.png](https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/8oLl952owjMJ4lap/img/c056138f-6ac8-406b-ac06-4193d1958727.png)\n",
    "options": [
      {
        "key": "A",
        "text": "关系完整性"
      },
      {
        "key": "B",
        "text": "用户定义完整性"
      },
      {
        "key": "C",
        "text": "参照完整性"
      },
      {
        "key": "D",
        "text": "实体完整性"
      }
    ],
    "correctAnswer": "D",
    "explanation": "<p>(1)实体完整性 (Entity Integrity)。 实体完整性规则要求每个数据表都必须有主键，而作为主键的所有字段，其属性必须是唯一且非空值。<br>(2)参照完整性 (Referential Integrity)。 现实世界中的实体之间往往存在某种联系，在关系模型中实体及实体间的联系是用关系来描述的，这样自然就存在着关系与关系间的引用。<br>(3)用户定义完整性 (User Defined Integrity)。 就是针对某一具体的关系数据库的约束条件，反映某一具体应用所涉及的数据必须满足的语义要求，由应用的环境决定。例如，银行的用户账户规定必须大于等于100000,小于999999。<br>题目中提到的是“人员信息表包含性别属性，且这个属性的值只能是男或者女”。这是一个具体的约束条件，用于限制性别属性的取值范围。这个约束不是由数据库系统自带的，而是根据实际应用需求自定义的。<br><strong>2024年11月第15题</strong><br>15.在多道批处理系统中有P1和P2两个作业，执行顺序如下，P1（计算40ms，I/O操作60ms，计算20ms），P2（计算100ms，I/O操作40ms，计算40ms），P2比P1晚20ms到达，在不考虑调度和切换时间的情况下完成两道作业最少需要（ ）时间。<br>A. 240ms<br>B. 200ms<br>C. 260ms<br>D. 220ms<br><img src=\"https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/8oLl952owjMJ4lap/img/c056138f-6ac8-406b-ac06-4193d1958727.png\" alt=\"image.png\"></p>\n",
    "tags": {
      "knowledge": [
        "数据库系统",
        "数据库设计",
        "信息安全",
        "数据安全"
      ],
      "chapters": [
        "ch05"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "medium",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 120,
    "source": "2024年下半年真题第14题"
  },
  {
    "id": "0013",
    "title": "RUP是（ ）的、以体系结构为中心的、迭代和增量的软件开发过...",
    "type": "single-choice",
    "content": "# 16.RUP是（ ）的、以体系结构为中心的、迭代和增量的软件开发过程。\n\nA. 测试驱动\nB. 领域驱动\nC. 数据驱动\nD. 用例驱动\n\n## 解析\n\n1)用例驱动\nRUP中的开发活动是用例驱动的，即需求分析、设计、实现和测试等活动都是用例驱\n动的。\n2)以体系结构为中心\nRUP中的开发活动是围绕体系结构展开的。软件体系结构的设计和代码设计无关，也不依赖于具体的程序设计语言。软件体系结构是软件设计过程中的一个层次，这一层次超越计算过程中的算法设计和数据结构设计。体系结构层次的设计问题包括系统的总体组织和全局控制、通信协议、同步、数据存取、给设计元素分配功能、设计元素的组织、物理分布、系统的伸缩性和性能等。\n3)迭代与增量\nRUP强调采用迭代和增量的方式来开发软件，把整个项目开发分为多个迭代过程。在每次迭代中，只考虑系统的一部分需求，进行分析、设计、实现、测试和部署等过程；每次迭代是在已完成部分的基础上进行的，每次增加一些新的功能实现，以此进行下去，直至最后项目的完成。\n",
    "options": [
      {
        "key": "A",
        "text": "测试驱动"
      },
      {
        "key": "B",
        "text": "领域驱动"
      },
      {
        "key": "C",
        "text": "数据驱动"
      },
      {
        "key": "D",
        "text": "用例驱动"
      }
    ],
    "correctAnswer": "D",
    "explanation": "<p>1)用例驱动<br>RUP中的开发活动是用例驱动的，即需求分析、设计、实现和测试等活动都是用例驱<br>动的。<br>2)以体系结构为中心<br>RUP中的开发活动是围绕体系结构展开的。软件体系结构的设计和代码设计无关，也不依赖于具体的程序设计语言。软件体系结构是软件设计过程中的一个层次，这一层次超越计算过程中的算法设计和数据结构设计。体系结构层次的设计问题包括系统的总体组织和全局控制、通信协议、同步、数据存取、给设计元素分配功能、设计元素的组织、物理分布、系统的伸缩性和性能等。<br>3)迭代与增量<br>RUP强调采用迭代和增量的方式来开发软件，把整个项目开发分为多个迭代过程。在每次迭代中，只考虑系统的一部分需求，进行分析、设计、实现、测试和部署等过程；每次迭代是在已完成部分的基础上进行的，每次增加一些新的功能实现，以此进行下去，直至最后项目的完成。</p>\n",
    "tags": {
      "knowledge": [
        "计算机网络",
        "网络协议",
        "软件工程",
        "项目管理",
        "系统质量",
        "非功能需求",
        "通信技术"
      ],
      "chapters": [
        "ch03"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "medium",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2024年下半年真题第16题"
  },
  {
    "id": "0014",
    "title": "关于SQL的问题",
    "type": "single-choice",
    "content": "# 17.下面关于SQL注入的说法错误的是（ ）。\n\nA. 使用ORM框架可以自动处理查询和参数化输入，但无法减少SQL注入的风险\nB. SQL注入是一种常见的攻击方式\nC. 使用预处理语句和参数化查询是防范SQL注入的有效方法\nD. 通过使用UNION关键字，攻击者可以将多个查询结果合并，从而获取数据库中的敏感信息\n\n## 解析\n\nORM(Object-Relation Mapping) 在关系型数据库和对象之间作一个映射，这样，在具体操纵数据库时，就不需要再去和复杂的 SQL语句打交道，只要像平时操作对象一样操作即可。\n",
    "options": [
      {
        "key": "A",
        "text": "使用ORM框架可以自动处理查询和参数化输入，但无法减少SQL注入的风险"
      },
      {
        "key": "B",
        "text": "SQL注入是一种常见的攻击方式"
      },
      {
        "key": "C",
        "text": "使用预处理语句和参数化查询是防范SQL注入的有效方法"
      },
      {
        "key": "D",
        "text": "通过使用UNION关键字，攻击者可以将多个查询结果合并，从而获取数据库中的敏感信息"
      }
    ],
    "correctAnswer": "A",
    "explanation": "<p>ORM(Object-Relation Mapping) 在关系型数据库和对象之间作一个映射，这样，在具体操纵数据库时，就不需要再去和复杂的 SQL语句打交道，只要像平时操作对象一样操作即可。</p>\n",
    "tags": {
      "knowledge": [
        "数据库系统",
        "数据库设计"
      ],
      "chapters": [
        "ch05"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2024年下半年真题第17题"
  },
  {
    "id": "0016",
    "title": "在体系结构描述中，典型的4+1视图模型包括（ ）。",
    "type": "single-choice",
    "content": "# 19.在体系结构描述中，典型的4+1视图模型包括（ ）。\n\nA. 逻辑视图、进程视图、开发视图、物理视图和场景\nB. 逻辑视图、进程视图、开发视图、部署视图和场景\nC. 逻辑视图、进程视图、开发视图、物理视图和类视图\nD. 逻辑视图、进程视图、开发视图、物理视图和部署视图\n\n## 解析\n\n把体系结构描述语言和多视图结合起来描述系统的体系结构，使系统更易于理解，方便系统相关人员之间进行交流，并且有利于系统的一致性检测以及系统质量属性评估。学术界已经提出若干多视图的方案，典型的包括4+1模型(逻辑视图、进程视图、开发视图、物理视图，加上统一的场景)。\n",
    "options": [
      {
        "key": "A",
        "text": "逻辑视图、进程视图、开发视图、物理视图和场景"
      },
      {
        "key": "B",
        "text": "逻辑视图、进程视图、开发视图、部署视图和场景"
      },
      {
        "key": "C",
        "text": "逻辑视图、进程视图、开发视图、物理视图和类视图"
      },
      {
        "key": "D",
        "text": "逻辑视图、进程视图、开发视图、物理视图和部署视图"
      }
    ],
    "correctAnswer": "A",
    "explanation": "<p>把体系结构描述语言和多视图结合起来描述系统的体系结构，使系统更易于理解，方便系统相关人员之间进行交流，并且有利于系统的一致性检测以及系统质量属性评估。学术界已经提出若干多视图的方案，典型的包括4+1模型(逻辑视图、进程视图、开发视图、物理视图，加上统一的场景)。</p>\n",
    "tags": {
      "knowledge": [
        "软件架构",
        "架构设计"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2024年下半年真题第19题"
  },
  {
    "id": "0017",
    "title": "路由器工作在OSI体系结构中的（ ）层。",
    "type": "single-choice",
    "content": "# 20.路由器工作在OSI体系结构中的（ ）层。\n\nA. 网络\nB. 传输\nC. 数据链路\nD. 物理\n\n## 解析\n\n路由器工作在OSI体系结构中的网络层，它可以在多个网络上交换和路由数据包。路由器可通过在相互独立网络中交换路由信息以生成路由表来达到数据包的路径选择。路由表包含网络地址、连接信息、路径信息和发送代价等属性。路由器通常用于广域网或广域网与局域网的互连。\n",
    "options": [
      {
        "key": "A",
        "text": "网络"
      },
      {
        "key": "B",
        "text": "传输"
      },
      {
        "key": "C",
        "text": "数据链路"
      },
      {
        "key": "D",
        "text": "物理"
      }
    ],
    "correctAnswer": "A",
    "explanation": "<p>路由器工作在OSI体系结构中的网络层，它可以在多个网络上交换和路由数据包。路由器可通过在相互独立网络中交换路由信息以生成路由表来达到数据包的路径选择。路由表包含网络地址、连接信息、路径信息和发送代价等属性。路由器通常用于广域网或广域网与局域网的互连。</p>\n",
    "tags": {
      "knowledge": [
        "计算机网络",
        "网络协议"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2024年下半年真题第20题"
  },
  {
    "id": "0018",
    "title": "关于架构的问题(第1空)",
    "type": "single-choice",
    "content": "# 21-22.在软件架构评估中，（ ）方法采用效用树这一工具来对质量属性进行分类和优先级排序。效用树的结构包括：（ ）。\n\n\n**第一个空：**\n\nA. SAEM\nB. ATAM\nC. SAAM\nD. CBAM\n",
    "options": [
      {
        "key": "A",
        "text": "SAEM"
      },
      {
        "key": "B",
        "text": "ATAM"
      },
      {
        "key": "C",
        "text": "SAAM"
      },
      {
        "key": "D",
        "text": "CBAM"
      }
    ],
    "correctAnswer": "B",
    "explanation": "",
    "tags": {
      "knowledge": [
        "软件架构",
        "架构设计"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "hard",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2024年下半年真题第21题"
  },
  {
    "id": "0019",
    "title": "有100人，其中会打篮球的有45人，会打乒乓球的有53人，会...",
    "type": "single-choice",
    "content": "# 23.有100人，其中会打篮球的有45人，会打乒乓球的有53人，会踢足球的有55人，既会打篮球也会打乒乓球的有28人，既会打篮球也会踢足球的有32人，既会打乒乓球也会踢足球的有35人，三种球都会的有20人，那么三种球都不会的有（ ）人。\n\nA. 22\nB. 23\nC. 21\nD. 20\n\n## 解析\n\n∣A∪B∪C∣=∣A∣+∣B∣+∣C∣−∣A∩B∣−∣A∩C∣−∣B∩C∣+∣A∩B∩C∣\n即，三个集合的并集的元素数量，等于每个集合元素的数量的和，减去每两个集合交集的元素数量，加上三个集合交集的元素数量。\n设会打篮球的人数是∣A∣ = 45\n设会打乒乓球的人数是∣B∣= 53\n设会踢足球的人数是∣C∣ = 55\n同时会打篮球和打乒乓球的人数表示为∣A∩B∣ = 28\n同时会打篮球和踢足球的人数表示为∣A∩C∣ = 32\n同时会打乒乓球和踢足球的人数表示为∣B∩C∣ = 35\n同时会三项运动的人数表示为∣A∩B∩C∣= 20\n总共参与调查的人数为∣A∪B∪C∣= 100\n会一种球的人数为∣A∣+∣B∣+∣C∣−∣A∩B∣−∣A∩C∣−∣B∩C∣+∣A∩B∩C∣\n\\=45+53+55-28-32-35+20=78\n三种球都不会的人数可以表示为：\n∣U∣-∣A∪B∪C∣=100-78=22\n",
    "options": [
      {
        "key": "A",
        "text": "22"
      },
      {
        "key": "B",
        "text": "23"
      },
      {
        "key": "C",
        "text": "21"
      },
      {
        "key": "D",
        "text": "20"
      }
    ],
    "correctAnswer": "A",
    "explanation": "<p>∣A∪B∪C∣=∣A∣+∣B∣+∣C∣−∣A∩B∣−∣A∩C∣−∣B∩C∣+∣A∩B∩C∣<br>即，三个集合的并集的元素数量，等于每个集合元素的数量的和，减去每两个集合交集的元素数量，加上三个集合交集的元素数量。<br>设会打篮球的人数是∣A∣ = 45<br>设会打乒乓球的人数是∣B∣= 53<br>设会踢足球的人数是∣C∣ = 55<br>同时会打篮球和打乒乓球的人数表示为∣A∩B∣ = 28<br>同时会打篮球和踢足球的人数表示为∣A∩C∣ = 32<br>同时会打乒乓球和踢足球的人数表示为∣B∩C∣ = 35<br>同时会三项运动的人数表示为∣A∩B∩C∣= 20<br>总共参与调查的人数为∣A∪B∪C∣= 100<br>会一种球的人数为∣A∣+∣B∣+∣C∣−∣A∩B∣−∣A∩C∣−∣B∩C∣+∣A∩B∩C∣<br>=45+53+55-28-32-35+20=78<br>三种球都不会的人数可以表示为：<br>∣U∣-∣A∪B∪C∣=100-78=22</p>\n",
    "tags": {
      "knowledge": [
        "数学基础",
        "集合论"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 120,
    "source": "2024年下半年真题第23题"
  },
  {
    "id": "0020",
    "title": "关于关系的问题",
    "type": "single-choice",
    "content": "# 24.某项目包括A、B、C、D四道工序，各道工序之间的衔接关系。正常进度下各工序所需的时间和直接费用、赶工进度下所需的时间和直接费用如下表所示。该项目每天需要的间接费用为4.5万元。根据此表，以最低成本完成该项目需要（  ）天。\n![image.png](https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/8oLl952owjMJ4lap/img/f311ba38-aa0a-4fad-8b92-2608deb05afc.png)\n\nA. 7\nB. 9\nC. 10\nD. 12\n\n## 解析\n\n这里表格的意思是，A作业本来是3天完成，一共需要10万，他最少也要一天完成，一共需要18万，也就是说A作业压缩两天增加了18-10=8万，压缩一天就是增加8/2=4万。同理可以算出，压缩B作业1天需要增加1万元，压缩C作业1天需要增加4万元，压缩D作业1天需要增加2万元。所以先压缩关键路径上的D作业，压缩2天，此时关键路径改变为AB和ACD，想要减短工期则需要同时压缩这两条关键路径，可以先选择压缩A作业2天，然后只能同时压缩BD才能使增加的直接费用少于4.5，所以BD作业同时压缩1天。此时为最低成本，A作业还需1天完成，B作业还需6天完成，C作业还需4天完成，D作业还需2天完成，关键路径为AB和ACD，工期为7天。答案选择A选项。\n",
    "options": [
      {
        "key": "A",
        "text": "7"
      },
      {
        "key": "B",
        "text": "9"
      },
      {
        "key": "C",
        "text": "10"
      },
      {
        "key": "D",
        "text": "12"
      }
    ],
    "correctAnswer": "A",
    "explanation": "<p>这里表格的意思是，A作业本来是3天完成，一共需要10万，他最少也要一天完成，一共需要18万，也就是说A作业压缩两天增加了18-10=8万，压缩一天就是增加8/2=4万。同理可以算出，压缩B作业1天需要增加1万元，压缩C作业1天需要增加4万元，压缩D作业1天需要增加2万元。所以先压缩关键路径上的D作业，压缩2天，此时关键路径改变为AB和ACD，想要减短工期则需要同时压缩这两条关键路径，可以先选择压缩A作业2天，然后只能同时压缩BD才能使增加的直接费用少于4.5，所以BD作业同时压缩1天。此时为最低成本，A作业还需1天完成，B作业还需6天完成，C作业还需4天完成，D作业还需2天完成，关键路径为AB和ACD，工期为7天。答案选择A选项。</p>\n",
    "tags": {
      "knowledge": [
        "数据库系统",
        "数据库设计"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2024年下半年真题第24题"
  },
  {
    "id": "0021",
    "title": "关于测试的问题",
    "type": "single-choice",
    "content": "# 25.白盒测试也称为结构测试，主要用于软件单元测试阶段，（ ）不属于白盒测试。\n\nA. 功能测试\nB. 控制流分析\nC. 数据流分析\nD. 程序变异测试\n\n## 解析\n\n白盒测试主要是借助程序内部的逻辑和相关信息，通过检测内部动作是否按照设计规格说明书的设定进行，检查每一条通路能否正常工作。白盒测试是从程序结构方面出发对测试用例进行设计。主要用于检查各个逻辑结构是否合理，对应的模块独立路径是否正常以及内部结构是否有效。常用的白盒测试法有控制流分析、数据流分析、路径分析、程序变异等。根据测试用例的覆盖程度，分为语句覆盖、判定覆盖、分支覆盖和路径覆盖等。综上，答案选择A选项。\n",
    "options": [
      {
        "key": "A",
        "text": "功能测试"
      },
      {
        "key": "B",
        "text": "控制流分析"
      },
      {
        "key": "C",
        "text": "数据流分析"
      },
      {
        "key": "D",
        "text": "程序变异测试"
      }
    ],
    "correctAnswer": "A",
    "explanation": "<p>白盒测试主要是借助程序内部的逻辑和相关信息，通过检测内部动作是否按照设计规格说明书的设定进行，检查每一条通路能否正常工作。白盒测试是从程序结构方面出发对测试用例进行设计。主要用于检查各个逻辑结构是否合理，对应的模块独立路径是否正常以及内部结构是否有效。常用的白盒测试法有控制流分析、数据流分析、路径分析、程序变异等。根据测试用例的覆盖程度，分为语句覆盖、判定覆盖、分支覆盖和路径覆盖等。综上，答案选择A选项。</p>\n",
    "tags": {
      "knowledge": [
        "软件工程",
        "项目管理"
      ],
      "chapters": [
        "ch04"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2024年下半年真题第25题"
  },
  {
    "id": "0022",
    "title": "关于测试的问题",
    "type": "single-choice",
    "content": "# 26.在白盒测试中，关于覆盖标准描述错误的是（ ）。\n\nA. 判定覆盖比语句覆盖强\nB. 满足条件组合覆盖的测试用例一定满足判定/条件覆盖\nC. 路径覆盖不能代替条件覆盖和条件组合覆盖\nD. 条件覆盖一定包含判定覆盖\n\n## 解析\n\nB选项正确。条件组合覆盖要求每个判定中的每个条件的所有可能组合至少被执行一次。这意味着它不仅覆盖了每个条件的每个结果（真或假），还考虑了这些条件之间的所有可能组合。由于它包含了每个条件的所有可能结果，因此自然满足判定/条件覆盖，后者要求每个判定中的每个条件至少有一个结果为真和至少有一个结果为假的测试用例。\nC选项正确。路径覆盖要求至少执行一次程序中所有可能的路径。虽然路径覆盖在覆盖程度上非常严格，但它并不保证所有条件和条件组合都被测试到。例如，一个复杂的判定结构可能有多个条件和条件组合，而路径覆盖可能只通过其中一些路径，忽略了其他路径中特定条件和条件组合的情况。\nD选项错误。条件覆盖要求每个判定中的每个条件至少有一个结果为真和至少有一个结果为假的测试用例。虽然这看似覆盖了判定中的每个条件，但并不保证每个判定的每个结果（即整个判定为真或为假）都被覆盖。\n",
    "options": [
      {
        "key": "A",
        "text": "判定覆盖比语句覆盖强"
      },
      {
        "key": "B",
        "text": "满足条件组合覆盖的测试用例一定满足判定/条件覆盖"
      },
      {
        "key": "C",
        "text": "路径覆盖不能代替条件覆盖和条件组合覆盖"
      },
      {
        "key": "D",
        "text": "条件覆盖一定包含判定覆盖"
      }
    ],
    "correctAnswer": "D",
    "explanation": "<p>B选项正确。条件组合覆盖要求每个判定中的每个条件的所有可能组合至少被执行一次。这意味着它不仅覆盖了每个条件的每个结果（真或假），还考虑了这些条件之间的所有可能组合。由于它包含了每个条件的所有可能结果，因此自然满足判定/条件覆盖，后者要求每个判定中的每个条件至少有一个结果为真和至少有一个结果为假的测试用例。<br>C选项正确。路径覆盖要求至少执行一次程序中所有可能的路径。虽然路径覆盖在覆盖程度上非常严格，但它并不保证所有条件和条件组合都被测试到。例如，一个复杂的判定结构可能有多个条件和条件组合，而路径覆盖可能只通过其中一些路径，忽略了其他路径中特定条件和条件组合的情况。<br>D选项错误。条件覆盖要求每个判定中的每个条件至少有一个结果为真和至少有一个结果为假的测试用例。虽然这看似覆盖了判定中的每个条件，但并不保证每个判定的每个结果（即整个判定为真或为假）都被覆盖。</p>\n",
    "tags": {
      "knowledge": [
        "软件工程",
        "项目管理"
      ],
      "chapters": [
        "ch04"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2024年下半年真题第26题"
  },
  {
    "id": "0024",
    "title": "关于设计模式的问题",
    "type": "single-choice",
    "content": "# 28.以下关于设计模式描述正确的是（ ）。\n\nA. 解释器模式和代理模式属于同一类型模式\nB. 观察者模式属于结构型模式\nC. 装饰器模式属于行为型模式\nD. 原型模式属于创建型模式\n\n## 解析\n\n创建型设计模式：描述对象如何创建，是为了将对象的创建与使用分离。包括五种：单例、原型、工厂方法、抽象工厂、构建器。\n结构型模式：描述类或对象如何组织成更大结构，包括7种：代理、适配器、桥接、装饰、外观、享元、组合。\n行为型模式：描述类或对象之间如何协作完成任务，包括11种：模板方法、策略、命令、职责链、状态、观察者、中介者、迭代器、访问者、备忘录、解释器。\n",
    "options": [
      {
        "key": "A",
        "text": "解释器模式和代理模式属于同一类型模式"
      },
      {
        "key": "B",
        "text": "观察者模式属于结构型模式"
      },
      {
        "key": "C",
        "text": "装饰器模式属于行为型模式"
      },
      {
        "key": "D",
        "text": "原型模式属于创建型模式"
      }
    ],
    "correctAnswer": "D",
    "explanation": "<p>创建型设计模式：描述对象如何创建，是为了将对象的创建与使用分离。包括五种：单例、原型、工厂方法、抽象工厂、构建器。<br>结构型模式：描述类或对象如何组织成更大结构，包括7种：代理、适配器、桥接、装饰、外观、享元、组合。<br>行为型模式：描述类或对象之间如何协作完成任务，包括11种：模板方法、策略、命令、职责链、状态、观察者、中介者、迭代器、访问者、备忘录、解释器。</p>\n",
    "tags": {
      "knowledge": [
        "软件架构",
        "架构设计"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "hard",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2024年下半年真题第28题"
  },
  {
    "id": "0025",
    "title": "（ ）是对对象实例化过程的抽象，它通过采用抽象类所定义的接口...",
    "type": "single-choice",
    "content": "# 29.（ ）是对对象实例化过程的抽象，它通过采用抽象类所定义的接口，封装了系统中对象如何创建、组合等信息。\n\nA. 结构型模式\nB. 组合型模式\nC. 创建型模式\nD. 行为型模式\n\n## 解析\n\n创建型设计模式：描述对象如何创建，是为了将对象的创建与使用分离。包括五种：单例、原型、工厂方法、抽象工厂、构建器。\n结构型模式：描述类或对象如何组织成更大结构，包括7种：代理、适配器、桥接、装饰、外观、享元、组合。\n行为型模式：描述类或对象之间如何协作完成任务，包括11种：模板方法、策略、命令、职责链、状态、观察者、中介者、迭代器、访问者、备忘录、解释器。\n",
    "options": [
      {
        "key": "A",
        "text": "结构型模式"
      },
      {
        "key": "B",
        "text": "组合型模式"
      },
      {
        "key": "C",
        "text": "创建型模式"
      },
      {
        "key": "D",
        "text": "行为型模式"
      }
    ],
    "correctAnswer": "C",
    "explanation": "<p>创建型设计模式：描述对象如何创建，是为了将对象的创建与使用分离。包括五种：单例、原型、工厂方法、抽象工厂、构建器。<br>结构型模式：描述类或对象如何组织成更大结构，包括7种：代理、适配器、桥接、装饰、外观、享元、组合。<br>行为型模式：描述类或对象之间如何协作完成任务，包括11种：模板方法、策略、命令、职责链、状态、观察者、中介者、迭代器、访问者、备忘录、解释器。</p>\n",
    "tags": {
      "knowledge": [
        "软件架构",
        "架构设计"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "hard",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2024年下半年真题第29题"
  },
  {
    "id": "0026",
    "title": "关于关系的问题",
    "type": "single-choice",
    "content": "# 30.有两个关系R（a，b，c）和S（b，c，d），将R和S进行自然连接，得到的结果包含（ ）列。\n\nA. 4\nB. 6\nC. 2\nD. 5\n\n## 解析\n\n（1）把参与运算的两个关系模式R与S的相同名称列找出来。即：b与c。\n（2）针对R与S做b与c属性的等值连接。\n这样产生的结果记录为：（a，b，c，d），所以得到的结果包含4列，答案选A。\n",
    "options": [
      {
        "key": "A",
        "text": "4"
      },
      {
        "key": "B",
        "text": "6"
      },
      {
        "key": "C",
        "text": "2"
      },
      {
        "key": "D",
        "text": "5"
      }
    ],
    "correctAnswer": "A",
    "explanation": "<p>（1）把参与运算的两个关系模式R与S的相同名称列找出来。即：b与c。<br>（2）针对R与S做b与c属性的等值连接。<br>这样产生的结果记录为：（a，b，c，d），所以得到的结果包含4列，答案选A。</p>\n",
    "tags": {
      "knowledge": [
        "数据库系统",
        "数据库设计"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2024年下半年真题第30题"
  },
  {
    "id": "0027",
    "title": "关于关系的问题",
    "type": "single-choice",
    "content": "# 31. 关系操作中，操作的对象和结果都是（ ）。\n\nA. 元组\nB. 记录\nC. 集合\nD. 列\n",
    "options": [
      {
        "key": "A",
        "text": "元组"
      },
      {
        "key": "B",
        "text": "记录"
      },
      {
        "key": "C",
        "text": "集合"
      },
      {
        "key": "D",
        "text": "列"
      }
    ],
    "correctAnswer": "C",
    "explanation": "",
    "tags": {
      "knowledge": [
        "数据库系统",
        "数据库设计"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2024年下半年真题第31题"
  },
  {
    "id": "0029",
    "title": "关于风格的问题",
    "type": "single-choice",
    "content": "# 33.下面关于体系结构风格说法正确的是（ ）。\n\nA. 管道-过滤器体系结构风格中，过滤器可以并行执行\nB. 批处理体系结构风格中，构件可以并行执行\nC. 批处理体系结构风格中，数据是增量传输的\nD. 黑板体系结构风格和管道-过滤器风格属于数据流体系风格的子风格\n\n## 解析\n\nB选项错误。批处理风格通常指的是一种顺序处理模式，其中数据被成批处理，并且通常按顺序通过一系列处理步骤。这种风格并不强调并行处理，而是侧重于批量处理大量数据。因此，这个选项是不正确的。\nC选项错误，在批处理风格中，数据通常是以整个批次的形式传输和处理的，而不是增量传输。\nD选项错误，黑板体系结构风格不属于数据流体系风格的子风格。\n",
    "options": [
      {
        "key": "A",
        "text": "管道-过滤器体系结构风格中，过滤器可以并行执行"
      },
      {
        "key": "B",
        "text": "批处理体系结构风格中，构件可以并行执行"
      },
      {
        "key": "C",
        "text": "批处理体系结构风格中，数据是增量传输的"
      },
      {
        "key": "D",
        "text": "黑板体系结构风格和管道-过滤器风格属于数据流体系风格的子风格"
      }
    ],
    "correctAnswer": "A",
    "explanation": "<p>B选项错误。批处理风格通常指的是一种顺序处理模式，其中数据被成批处理，并且通常按顺序通过一系列处理步骤。这种风格并不强调并行处理，而是侧重于批量处理大量数据。因此，这个选项是不正确的。<br>C选项错误，在批处理风格中，数据通常是以整个批次的形式传输和处理的，而不是增量传输。<br>D选项错误，黑板体系结构风格不属于数据流体系风格的子风格。</p>\n",
    "tags": {
      "knowledge": [
        "软件架构",
        "架构设计"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2024年下半年真题第33题"
  },
  {
    "id": "0030",
    "title": "关于架构的问题",
    "type": "single-choice",
    "content": "# 34.在架构设计中，提高加密级别可以提高安全性，但可能要耗费更多的处理时间，影响系统性能。如果某个机密消息的处理有严格的时间延迟要求，则加密级别可能就会成为架构评估中的一个（ ）。\n\nA. 权衡点\nB. 敏感点\nC. 风险点\nD. 非风险点\n",
    "options": [
      {
        "key": "A",
        "text": "权衡点"
      },
      {
        "key": "B",
        "text": "敏感点"
      },
      {
        "key": "C",
        "text": "风险点"
      },
      {
        "key": "D",
        "text": "非风险点"
      }
    ],
    "correctAnswer": "A",
    "explanation": "",
    "tags": {
      "knowledge": [
        "软件架构",
        "架构设计",
        "信息安全",
        "数据安全",
        "系统质量",
        "非功能需求"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "hard",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2024年下半年真题第34题"
  },
  {
    "id": "0033",
    "title": "ABSD体系结构需求一般来自三个方面，分别是（ ）。",
    "type": "single-choice",
    "content": "# 37.ABSD体系结构需求一般来自三个方面，分别是（ ）。\n\nA. 系统的质量目标、系统的商业目标和系统开发人员的商业目标\nB. 系统的功能需求、系统的质量目标和系统的商业目标\nC. 系统的质量目标、系统的商业目标和系统开发人员的质量目标\nD. 系统的功能需求、系统的商业目标和系统开发人员的商业目标\n\n## 解析\n\n员的商业目标。软件体系结构需求获取过程主要是定义开发人员必须实现的软件功能，使得用户能完成他们的任务，从而满足业务上的功能需求。与此同时，还要获得软件质量属性，满足一些非功能需求。\n",
    "options": [
      {
        "key": "A",
        "text": "系统的质量目标、系统的商业目标和系统开发人员的商业目标"
      },
      {
        "key": "B",
        "text": "系统的功能需求、系统的质量目标和系统的商业目标"
      },
      {
        "key": "C",
        "text": "系统的质量目标、系统的商业目标和系统开发人员的质量目标"
      },
      {
        "key": "D",
        "text": "系统的功能需求、系统的商业目标和系统开发人员的商业目标"
      }
    ],
    "correctAnswer": "A",
    "explanation": "<p>员的商业目标。软件体系结构需求获取过程主要是定义开发人员必须实现的软件功能，使得用户能完成他们的任务，从而满足业务上的功能需求。与此同时，还要获得软件质量属性，满足一些非功能需求。</p>\n",
    "tags": {
      "knowledge": [
        "软件架构",
        "架构设计"
      ],
      "chapters": [
        "ch07"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2024年下半年真题第37题"
  },
  {
    "id": "0036",
    "title": "一个模块内的处理元素是相关的，而且必须以特定次序执行，则称为...",
    "type": "single-choice",
    "content": "# 40. 一个模块内的处理元素是相关的，而且必须以特定次序执行，则称为（ ）。\n\nA. 通信内聚\nB. 逻辑内聚\nC. 过程内聚\nD. 时间内聚\n\n## 解析\n\n功能内聚：完成一个单一功能，各个部分协同工作，缺一不可。\n顺序内聚：处理元素相关，而且必须顺序执行。\n通信内聚：所有处理元素集中在一个数据结构的区域上。\n过程内聚：处理元素相关，而且必须按特定的次序执行。\n瞬时内聚（时间内聚）：所包含的任务必须在同一时间间隔内执行。\n逻辑内聚：完成逻辑上相关的一组任务。\n偶然内聚（巧合内聚）：完成一组没有关系或松散关系的任务。\n",
    "options": [
      {
        "key": "A",
        "text": "通信内聚"
      },
      {
        "key": "B",
        "text": "逻辑内聚"
      },
      {
        "key": "C",
        "text": "过程内聚"
      },
      {
        "key": "D",
        "text": "时间内聚"
      }
    ],
    "correctAnswer": "C",
    "explanation": "<p>功能内聚：完成一个单一功能，各个部分协同工作，缺一不可。<br>顺序内聚：处理元素相关，而且必须顺序执行。<br>通信内聚：所有处理元素集中在一个数据结构的区域上。<br>过程内聚：处理元素相关，而且必须按特定的次序执行。<br>瞬时内聚（时间内聚）：所包含的任务必须在同一时间间隔内执行。<br>逻辑内聚：完成逻辑上相关的一组任务。<br>偶然内聚（巧合内聚）：完成一组没有关系或松散关系的任务。</p>\n",
    "tags": {
      "knowledge": [
        "数据库系统",
        "数据库设计",
        "通信技术"
      ],
      "chapters": [
        "ch03"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2024年下半年真题第40题"
  },
  {
    "id": "0039",
    "title": "关于关系的问题",
    "type": "single-choice",
    "content": "# 43.在UML用例图中，参与者之间存在（ ）关系。\n\nA. 聚合\nB. 包含\nC. 继承\nD. 扩展\n",
    "options": [
      {
        "key": "A",
        "text": "聚合"
      },
      {
        "key": "B",
        "text": "包含"
      },
      {
        "key": "C",
        "text": "继承"
      },
      {
        "key": "D",
        "text": "扩展"
      }
    ],
    "correctAnswer": "C",
    "explanation": "",
    "tags": {
      "knowledge": [
        "数据库系统",
        "数据库设计"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2024年下半年真题第43题"
  },
  {
    "id": "0040",
    "title": "关于进程的问题",
    "type": "single-choice",
    "content": "# 44. 在进程通信体系结构风格中，连接件是（ ）。\n\nA. 独立的过程\nB. 消息队列\nC. 事件\nD. 消息传递\n",
    "options": [
      {
        "key": "A",
        "text": "独立的过程"
      },
      {
        "key": "B",
        "text": "消息队列"
      },
      {
        "key": "C",
        "text": "事件"
      },
      {
        "key": "D",
        "text": "消息传递"
      }
    ],
    "correctAnswer": "D",
    "explanation": "",
    "tags": {
      "knowledge": [
        "操作系统",
        "内存管理",
        "进程管理",
        "软件架构",
        "架构设计",
        "通信技术"
      ],
      "chapters": [
        "ch01"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2024年下半年真题第44题"
  },
  {
    "id": "0041",
    "title": "关于测试的问题",
    "type": "single-choice",
    "content": "# 45.脚本是一组测试工具执行的指令集合，数据驱动脚本是指将测试输入存储在（ ）中，针对不同的数据输入实现多个测试用例。\n\nA. 程序文件\nB. 数据文件\nC. 脚本文件\nD. 指令文件\n\n## 解析\n\n线性脚本，是录制手工执行的测试用例得到的脚本，这种脚本包含所有的击键、移动、输入数据等，所有录制的测试用例都可以得到完整的回放。\n结构化脚本，类似于结构化程序设计，具有各种逻辑结构、函数调用功能。\n共享脚本，共享脚本是指可以被多个测试用例使用的脚本，也允许其他脚本调用。共享脚本可以在不同主机、不同系统之间共享，也可以在同一主机、同一系统之间共享。\n数据驱动脚本，将测试输入存储在独立的（数据）文件中，而不是存储在脚本中。可以针对不同数据输入实现多个测试用例。\n关键字驱动脚本，关键字驱动脚本是数据驱动脚本的逻辑扩展。它将数据文件变成测试用例的描述，采用一些关键字指定要执行的任务。\n",
    "options": [
      {
        "key": "A",
        "text": "程序文件"
      },
      {
        "key": "B",
        "text": "数据文件"
      },
      {
        "key": "C",
        "text": "脚本文件"
      },
      {
        "key": "D",
        "text": "指令文件"
      }
    ],
    "correctAnswer": "B",
    "explanation": "<p>线性脚本，是录制手工执行的测试用例得到的脚本，这种脚本包含所有的击键、移动、输入数据等，所有录制的测试用例都可以得到完整的回放。<br>结构化脚本，类似于结构化程序设计，具有各种逻辑结构、函数调用功能。<br>共享脚本，共享脚本是指可以被多个测试用例使用的脚本，也允许其他脚本调用。共享脚本可以在不同主机、不同系统之间共享，也可以在同一主机、同一系统之间共享。<br>数据驱动脚本，将测试输入存储在独立的（数据）文件中，而不是存储在脚本中。可以针对不同数据输入实现多个测试用例。<br>关键字驱动脚本，关键字驱动脚本是数据驱动脚本的逻辑扩展。它将数据文件变成测试用例的描述，采用一些关键字指定要执行的任务。</p>\n",
    "tags": {
      "knowledge": [
        "软件工程",
        "项目管理"
      ],
      "chapters": [
        "ch04"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "hard",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2024年下半年真题第45题"
  },
  {
    "id": "0042",
    "title": "Web服务描述语言WSDL描述了Web服务的三个基本属性，包...",
    "type": "single-choice",
    "content": "# 46.Web服务描述语言WSDL描述了Web服务的三个基本属性，包括（ ）。\n\nA. 谁要访问服务、如何访问服务和服务位于何处\nB. 服务做什么、谁要访问服务和服务位于何处\nC. 服务做什么、如何访问服务和谁要访问服务\nD. 服务做什么、如何访问服务和服务位于何处\n\n## 解析\n\n(1)服务做些什么——服务所提供的操作(方法)。\n(2)如何访问服务——和服务交互的数据格式以及必要协议。\n(3)服务位于何处——协议相关的地址，如URL。\n",
    "options": [
      {
        "key": "A",
        "text": "谁要访问服务、如何访问服务和服务位于何处"
      },
      {
        "key": "B",
        "text": "服务做什么、谁要访问服务和服务位于何处"
      },
      {
        "key": "C",
        "text": "服务做什么、如何访问服务和谁要访问服务"
      },
      {
        "key": "D",
        "text": "服务做什么、如何访问服务和服务位于何处"
      }
    ],
    "correctAnswer": "D",
    "explanation": "<p>(1)服务做些什么——服务所提供的操作(方法)。<br>(2)如何访问服务——和服务交互的数据格式以及必要协议。<br>(3)服务位于何处——协议相关的地址，如URL。</p>\n",
    "tags": {
      "knowledge": [
        "计算机网络",
        "网络协议"
      ],
      "chapters": [
        "ch03"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2024年下半年真题第46题"
  },
  {
    "id": "0044",
    "title": "关于国家秘密的问题",
    "type": "single-choice",
    "content": "# 4.国家秘密的保密期限，除另有规定外，机密级不超过（ ）。\n\nA. 二十年\nB. 十年\nC. 四十年\nD. 三十年\n",
    "options": [
      {
        "key": "A",
        "text": "二十年"
      },
      {
        "key": "B",
        "text": "十年"
      },
      {
        "key": "C",
        "text": "四十年"
      },
      {
        "key": "D",
        "text": "三十年"
      }
    ],
    "correctAnswer": "A",
    "explanation": "",
    "tags": {
      "knowledge": [
        "信息安全",
        "法律法规"
      ],
      "chapters": [
        "ch11"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2025年上半年真题第4题"
  },
  {
    "id": "0047",
    "title": "关于关系的问题",
    "type": "single-choice",
    "content": "# 7.在下列运算中，（ ）不属于关系运算。\n\nA. 删除\nB. 连接\nC. 投影\nD. 选择\n\n## 解析\n\n关系运算的基本操作包括：\n选择（Select）：通过条件筛选行，是关系运算的基础操作。\n投影（Project）：选择关系中特定的列，是经典的关系运算操作。\n连接（Join）：将两个关系基于条件合并，是关系运算的核心操作之一。\n",
    "options": [
      {
        "key": "A",
        "text": "删除"
      },
      {
        "key": "B",
        "text": "连接"
      },
      {
        "key": "C",
        "text": "投影"
      },
      {
        "key": "D",
        "text": "选择"
      }
    ],
    "correctAnswer": "A",
    "explanation": "<p>关系运算的基本操作包括：<br>选择（Select）：通过条件筛选行，是关系运算的基础操作。<br>投影（Project）：选择关系中特定的列，是经典的关系运算操作。<br>连接（Join）：将两个关系基于条件合并，是关系运算的核心操作之一。</p>\n",
    "tags": {
      "knowledge": [
        "数据库系统",
        "数据库设计"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2025年上半年真题第7题"
  },
  {
    "id": "0049",
    "title": "关于内存的问题",
    "type": "single-choice",
    "content": "# 53.分段允许程序员把内存视为由这个地址空间或段组成，其中段的大小是（ ）。\n\nA. 固定的\nB. 不可变的\nC. 相等的\nD. 动态可变的\n",
    "options": [
      {
        "key": "A",
        "text": "固定的"
      },
      {
        "key": "B",
        "text": "不可变的"
      },
      {
        "key": "C",
        "text": "相等的"
      },
      {
        "key": "D",
        "text": "动态可变的"
      }
    ],
    "correctAnswer": "D",
    "explanation": "",
    "tags": {
      "knowledge": [
        "操作系统",
        "内存管理",
        "进程管理"
      ],
      "chapters": [
        "ch01"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2024年下半年真题第53题"
  },
  {
    "id": "0050",
    "title": "根据芯片可适应的工作环境温度，-40℃~+85℃属于（ ）。",
    "type": "single-choice",
    "content": "# 10.根据芯片可适应的工作环境温度，-40℃~+85℃属于（ ）。\n\nA. 军用级\nB. 民用级\nC. 工业级\nD. 通用级\n\n## 解析\n\n民用级的工作温度范围：0~70℃\n工业级的工作温度范围：-40~85℃\n军用级的工作温度范围：-55~150℃\n",
    "options": [
      {
        "key": "A",
        "text": "军用级"
      },
      {
        "key": "B",
        "text": "民用级"
      },
      {
        "key": "C",
        "text": "工业级"
      },
      {
        "key": "D",
        "text": "通用级"
      }
    ],
    "correctAnswer": "C",
    "explanation": "<p>民用级的工作温度范围：0<del>70℃<br>工业级的工作温度范围：-40</del>85℃<br>军用级的工作温度范围：-55~150℃</p>\n",
    "tags": {
      "knowledge": [
        "数学基础",
        "数据分析"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2025年上半年真题第10题"
  },
  {
    "id": "0051",
    "title": "设x，y满足约束条件：x-1≥0，x-y≤0，x+y-4≤0...",
    "type": "single-choice",
    "content": "# 11. 设x，y满足约束条件：x-1≥0，x-y≤0，x+y-4≤0，则y/x的最大值是（ ）。\n\nA. 3\nB. 2\nC. 4\nD. 1\n\n## 解析\n\nx-1≥0\nx-y≤0，\nx-y-4≤0\n解方程组，得到三组可行解：\n（1）x=1，y=3，此时y/x=3\n（2）x=1，y=1，此时y/x=1\n（3）x=2，y=2，此时y/x=1\n所以y/x最大值是：3。本题选择A选项。\n",
    "options": [
      {
        "key": "A",
        "text": "3"
      },
      {
        "key": "B",
        "text": "2"
      },
      {
        "key": "C",
        "text": "4"
      },
      {
        "key": "D",
        "text": "1"
      }
    ],
    "correctAnswer": "A",
    "explanation": "<p>x-1≥0<br>x-y≤0，<br>x-y-4≤0<br>解方程组，得到三组可行解：<br>（1）x=1，y=3，此时y/x=3<br>（2）x=1，y=1，此时y/x=1<br>（3）x=2，y=2，此时y/x=1<br>所以y/x最大值是：3。本题选择A选项。</p>\n",
    "tags": {
      "knowledge": [
        "数学基础",
        "线性规划"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2025年上半年真题第11题"
  },
  {
    "id": "0052",
    "title": "关于架构的问题",
    "type": "single-choice",
    "content": "# 12.微服务架构中，断路器模式主要包含以下三种状态（ ）。\n\nA. 关闭状态、激活状态、挂起状态\nB. 激活状态、打开状态、休眠状态\nC. 激活状态、打开状态、熔断状态\nD. 关闭状态、打开状态、半开状态\n\n## 解析\n\n关闭状态(Closed)：初始状态，允许请求通过。如果请求失败次数超过阈值，则状态切换为“打开状态”。\n打开状态(Open)：不允许请求通过，直接返回错误。经过一段时间后，将状态切换为“半开状态”。\n半开状态(Half-Open)：允许部分请求通过。如果请求成功，则状态切换为关闭状态，否则，切换回打开状态。\n![image.png](https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/yBRq1ZPjkr7PKOdv/img/9932e101-8ba8-45ad-95b1-ee72135ae83d.png)\n",
    "options": [
      {
        "key": "A",
        "text": "关闭状态、激活状态、挂起状态"
      },
      {
        "key": "B",
        "text": "激活状态、打开状态、休眠状态"
      },
      {
        "key": "C",
        "text": "激活状态、打开状态、熔断状态"
      },
      {
        "key": "D",
        "text": "关闭状态、打开状态、半开状态"
      }
    ],
    "correctAnswer": "D",
    "explanation": "<p>关闭状态(Closed)：初始状态，允许请求通过。如果请求失败次数超过阈值，则状态切换为“打开状态”。<br>打开状态(Open)：不允许请求通过，直接返回错误。经过一段时间后，将状态切换为“半开状态”。<br>半开状态(Half-Open)：允许部分请求通过。如果请求成功，则状态切换为关闭状态，否则，切换回打开状态。<br><img src=\"https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/yBRq1ZPjkr7PKOdv/img/9932e101-8ba8-45ad-95b1-ee72135ae83d.png\" alt=\"image.png\"></p>\n",
    "tags": {
      "knowledge": [
        "软件架构",
        "架构设计"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2025年上半年真题第12题"
  },
  {
    "id": "0053",
    "title": "关于架构的问题",
    "type": "single-choice",
    "content": "# 13.下面关于三层C/S架构的特点描述不正确的是（ ）。\n\nA. 合理地划分三层的功能，使整个系统的逻辑结构更为清晰，能提高系统的可维护性和可扩展性\nB. B/S架构是一种特殊的两层C/S架构\nC. 与两层C/S架构相比，在三层C/S架构中，增加了一个应用服务器\nD. 三层C/S架构将应用系统分成表示层、功能层和数据层三个部分\n\n## 解析\n\nB选项错误。B/S架构与C/S架构是两种不同的架构模式。B/S架构并不是特殊的两层C/S架构。\nC选项正确。两层C/S架构通常由客户端和服务器端组成，客户端负责用户界面和部分业务逻辑，服务器端负责数据处理和存储。而三层C/S架构在两层架构的基础上增加了应用服务器，应用服务器承担了大部分的业务逻辑处理，客户端只负责用户界面展示，服务器端只负责数据存储和管理。这样减轻了客户端和服务器的负担，提高了系统的性能和可扩展性。\nD选项正确。三层C/S架构的典型分层就是表示层、功能层和数据层。表示层是用户与系统交互的界面；功能层包含系统的业务逻辑处理，负责对数据进行加工和处理；数据层则负责数据的存储和管理。\n",
    "options": [
      {
        "key": "A",
        "text": "合理地划分三层的功能，使整个系统的逻辑结构更为清晰，能提高系统的可维护性和可扩展性"
      },
      {
        "key": "B",
        "text": "B/S架构是一种特殊的两层C/S架构"
      },
      {
        "key": "C",
        "text": "与两层C/S架构相比，在三层C/S架构中，增加了一个应用服务器"
      },
      {
        "key": "D",
        "text": "三层C/S架构将应用系统分成表示层、功能层和数据层三个部分"
      }
    ],
    "correctAnswer": "B",
    "explanation": "<p>B选项错误。B/S架构与C/S架构是两种不同的架构模式。B/S架构并不是特殊的两层C/S架构。<br>C选项正确。两层C/S架构通常由客户端和服务器端组成，客户端负责用户界面和部分业务逻辑，服务器端负责数据处理和存储。而三层C/S架构在两层架构的基础上增加了应用服务器，应用服务器承担了大部分的业务逻辑处理，客户端只负责用户界面展示，服务器端只负责数据存储和管理。这样减轻了客户端和服务器的负担，提高了系统的性能和可扩展性。<br>D选项正确。三层C/S架构的典型分层就是表示层、功能层和数据层。表示层是用户与系统交互的界面；功能层包含系统的业务逻辑处理，负责对数据进行加工和处理；数据层则负责数据的存储和管理。</p>\n",
    "tags": {
      "knowledge": [
        "软件架构",
        "架构设计",
        "系统质量",
        "非功能需求"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "medium",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2025年上半年真题第13题"
  },
  {
    "id": "0054",
    "title": "关于信道的问题",
    "type": "single-choice",
    "content": "# 14. 某信道的带宽为3000Hz，编码采用32种不同的物理状态来表示数据，在无噪声环境下，该信道的最大数据传输速率是（ ）kbps。\n\nA. 100\nB. 30\nC. 50\nD. 500\n\n## 解析\n\n![image.png](https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/yBRq1ZPjkr7PKOdv/img/1e69dff6-7035-4ba4-898a-5803eba1eb2b.png)\n根据奈奎斯特（Nyquist）定理，无噪声信道的最大传输速率为：\nC=2Blog~2~(N)=2\\*3000\\*log~2~（32）=6000\\*5=30000=30kbps。\n",
    "options": [
      {
        "key": "A",
        "text": "100"
      },
      {
        "key": "B",
        "text": "30"
      },
      {
        "key": "C",
        "text": "50"
      },
      {
        "key": "D",
        "text": "500"
      }
    ],
    "correctAnswer": "B",
    "explanation": "<p><img src=\"https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/yBRq1ZPjkr7PKOdv/img/1e69dff6-7035-4ba4-898a-5803eba1eb2b.png\" alt=\"image.png\"><br>根据奈奎斯特（Nyquist）定理，无噪声信道的最大传输速率为：<br>C=2Blog<del>2</del>(N)=2*3000*log<del>2</del>（32）=6000*5=30000=30kbps。</p>\n",
    "tags": {
      "knowledge": [
        "通信技术"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2025年上半年真题第14题"
  },
  {
    "id": "0056",
    "title": "关于操作系统的问题",
    "type": "single-choice",
    "content": "# 16.嵌入式操作系统通常分为实时和非实时两类，（ ）不属于非实时嵌入式操作系统。\n\nA. WinCE\nB. VxWorks\nC. Android\nD. IOS\n\n## 解析\n\niOS是苹果公司为其移动设备（如iPhone、iPad等）开发的操作系统，它主要侧重于用户体验和应用程序的运行，并非专门为实时应用设计。\nAndroid是一个基于Linux内核的开源移动操作系统，主要用于智能手机、平板电脑等移动设备。提供了丰富的应用程序开发接口和良好的用户界面，但不是实时操作系统。\nWinCE（Windows Embedded Compact）是微软公司开发的一款嵌入式操作系统，它具有较小的内核和较低的资源需求，适用于一些资源受限的嵌入式设备。WinCE并非严格的实时操作系统。\n综上VxWorks是典型的实时嵌入式操作系统，而IOS、Android和WinCE不属于实时嵌入式OS。本题选择B选项。\n",
    "options": [
      {
        "key": "A",
        "text": "WinCE"
      },
      {
        "key": "B",
        "text": "VxWorks"
      },
      {
        "key": "C",
        "text": "Android"
      },
      {
        "key": "D",
        "text": "IOS"
      }
    ],
    "correctAnswer": "B",
    "explanation": "<p>iOS是苹果公司为其移动设备（如iPhone、iPad等）开发的操作系统，它主要侧重于用户体验和应用程序的运行，并非专门为实时应用设计。<br>Android是一个基于Linux内核的开源移动操作系统，主要用于智能手机、平板电脑等移动设备。提供了丰富的应用程序开发接口和良好的用户界面，但不是实时操作系统。<br>WinCE（Windows Embedded Compact）是微软公司开发的一款嵌入式操作系统，它具有较小的内核和较低的资源需求，适用于一些资源受限的嵌入式设备。WinCE并非严格的实时操作系统。<br>综上VxWorks是典型的实时嵌入式操作系统，而IOS、Android和WinCE不属于实时嵌入式OS。本题选择B选项。</p>\n",
    "tags": {
      "knowledge": [
        "操作系统",
        "内存管理",
        "进程管理",
        "计算机网络",
        "网络协议"
      ],
      "chapters": [
        "ch01"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "medium",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2025年上半年真题第16题"
  },
  {
    "id": "0057",
    "title": "关于性能的问题",
    "type": "single-choice",
    "content": "# 17.Web服务器性能评测方法不包括（ ）。\n\nA. 可靠性测试\nB. 压力测试\nC. 基准性能测试\nD. UI测试\n",
    "options": [
      {
        "key": "A",
        "text": "可靠性测试"
      },
      {
        "key": "B",
        "text": "压力测试"
      },
      {
        "key": "C",
        "text": "基准性能测试"
      },
      {
        "key": "D",
        "text": "UI测试"
      }
    ],
    "correctAnswer": "D",
    "explanation": "",
    "tags": {
      "knowledge": [
        "系统质量",
        "非功能需求"
      ],
      "chapters": [
        "ch07"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2025年上半年真题第17题"
  },
  {
    "id": "0058",
    "title": "ERP中的企业资源包括企业的“三流”资源，即（ ）。",
    "type": "single-choice",
    "content": "# 18.ERP中的企业资源包括企业的“三流”资源，即（ ）。\n\nA. 税务流资源、资金流资源和信息流资源\nB. 物流资源、税务流资源和信息流资源\nC. 物流资源、资金流资源和信息流资源\nD. 物流资源、资金流资源和税务流资源\n\n## 解析\n\nERP 也就是对这3种资源进行全面集成管理的管理信息系统。概括地说， ERP是建立在信息技术基础上，利用现代企业的先进管理思想，全面地集成了企业的所有资源信息，并为企业提供决策、计划、控制与经营业绩评估的全方位和系统化的管理平台。 ERP系统是一种管理理论和管理思想，不仅仅是信息系统。它利用企业的所有资源，包括内部资源与外部市场资源，为企业制造产品或提供服务创造最优的解决方案，最终达到企业的经营目标。\n",
    "options": [
      {
        "key": "A",
        "text": "税务流资源、资金流资源和信息流资源"
      },
      {
        "key": "B",
        "text": "物流资源、税务流资源和信息流资源"
      },
      {
        "key": "C",
        "text": "物流资源、资金流资源和信息流资源"
      },
      {
        "key": "D",
        "text": "物流资源、资金流资源和税务流资源"
      }
    ],
    "correctAnswer": "C",
    "explanation": "<p>ERP 也就是对这3种资源进行全面集成管理的管理信息系统。概括地说， ERP是建立在信息技术基础上，利用现代企业的先进管理思想，全面地集成了企业的所有资源信息，并为企业提供决策、计划、控制与经营业绩评估的全方位和系统化的管理平台。 ERP系统是一种管理理论和管理思想，不仅仅是信息系统。它利用企业的所有资源，包括内部资源与外部市场资源，为企业制造产品或提供服务创造最优的解决方案，最终达到企业的经营目标。</p>\n",
    "tags": {
      "knowledge": [
        "企业管理",
        "系统架构"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "hard",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2025年上半年真题第18题"
  },
  {
    "id": "0061",
    "title": "关于测试的问题",
    "type": "single-choice",
    "content": "# 65.体系结构演化是使用系统演化步骤去修改应用，以满足新的需求。主要包括以下步骤，需求变化归类，制定体系结构演化计划，修改、增加或删除构件，（ ），构件组装与测试，以及技术评审。\n\nA. 更新构件的相互作用\nB. 构件版本管理\nC. 分析已有构件\nD. 分析构件间的关系\n\n## 解析\n\n首先必须对用户需求的变化进行归类，使变化的需求与已有构件对应。对找不到对应构件的变动，也要做好标记，在后续工作中，将创建新的构件，以对应这部分变化的需求。\n（2）制订体系结构演化计划\n在改变原有结构之前，开发组织必须制订一个周密的体系结构演化计划，作为后续演化开发工作的指南。\n（3）修改、增加或删除构件\n在演化计划的基础上，开发人员可根据在第1步得到的需求变动的归类情况，决定是否修改或删除存在的构件、增加新构件。最后，对修改和增加的构件进行功能性测试。\n（4）更新构件的相互作用\n随着构件的增加、删除和修改，构件之间的控制流必须得到更新。\n（5）构件组装与测试\n通过组装支持工具把这些构件的实现体组装起来，完成整个软件系统的连接与合成，形成新的体系结构。然后对组装后的系统整体功能和性能进行测试。\n（6）技术评审\n对以上步骤进行确认，进行技术评审。评审组装后的体系结构是否反映需求变动、符合用户需求。如果不符合，则需要在第2到第6步之间进行迭代。\n",
    "options": [
      {
        "key": "A",
        "text": "更新构件的相互作用"
      },
      {
        "key": "B",
        "text": "构件版本管理"
      },
      {
        "key": "C",
        "text": "分析已有构件"
      },
      {
        "key": "D",
        "text": "分析构件间的关系"
      }
    ],
    "correctAnswer": "A",
    "explanation": "<p>首先必须对用户需求的变化进行归类，使变化的需求与已有构件对应。对找不到对应构件的变动，也要做好标记，在后续工作中，将创建新的构件，以对应这部分变化的需求。<br>（2）制订体系结构演化计划<br>在改变原有结构之前，开发组织必须制订一个周密的体系结构演化计划，作为后续演化开发工作的指南。<br>（3）修改、增加或删除构件<br>在演化计划的基础上，开发人员可根据在第1步得到的需求变动的归类情况，决定是否修改或删除存在的构件、增加新构件。最后，对修改和增加的构件进行功能性测试。<br>（4）更新构件的相互作用<br>随着构件的增加、删除和修改，构件之间的控制流必须得到更新。<br>（5）构件组装与测试<br>通过组装支持工具把这些构件的实现体组装起来，完成整个软件系统的连接与合成，形成新的体系结构。然后对组装后的系统整体功能和性能进行测试。<br>（6）技术评审<br>对以上步骤进行确认，进行技术评审。评审组装后的体系结构是否反映需求变动、符合用户需求。如果不符合，则需要在第2到第6步之间进行迭代。</p>\n",
    "tags": {
      "knowledge": [
        "软件工程",
        "项目管理",
        "系统质量",
        "非功能需求"
      ],
      "chapters": [
        "ch04"
      ],
      "years": [
        "2024-2"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "medium",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 120,
    "source": "2024年下半年真题第65题"
  },
  {
    "id": "0062",
    "title": "关于操作系统的问题",
    "type": "single-choice",
    "content": "# 23.操作系统中有5个进程，若每个进程最多可同时访问2个资源，为了不发生死锁，至少需要提供（ ）个资源。\n\nA. 6\nB. 5\nC. 8\nD. 10\n",
    "options": [
      {
        "key": "A",
        "text": "6"
      },
      {
        "key": "B",
        "text": "5"
      },
      {
        "key": "C",
        "text": "8"
      },
      {
        "key": "D",
        "text": "10"
      }
    ],
    "correctAnswer": "A",
    "explanation": "",
    "tags": {
      "knowledge": [
        "操作系统",
        "内存管理",
        "进程管理"
      ],
      "chapters": [
        "ch01"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2025年上半年真题第23题"
  },
  {
    "id": "0064",
    "title": "下面关于需求跟踪的描述不正确的是（ ）。",
    "type": "single-choice",
    "content": "# 25.下面关于需求跟踪的描述不正确的是（ ）。\n\nA. 正向跟踪是检查设计文档、代码、测试用例等工作成果是否都能在《产品需求规格说明书》中找到出处\nB. 需求跟踪的目的是建立与维护“需求-设计-编程-测试”之间的一致性\nC. 需求跟踪包括编制每个需求同系统元素之间的联系文档，这些元素包括别的需求、体系结构、其他设计部件、源代码模块、测试、帮助文件和文档等\nD. 正向跟踪和逆向跟踪合称为“双向跟踪”\n\n## 解析\n\n需求跟踪提供了由需求到产品实现整个过程范围的明确查阅的能力。需求跟踪的目的是建立与维护“需求-设计-编程-测试”之间的一致性，确保所有的工作成果符合用户需求。\n需求跟踪有两种方式：\n(1)正向跟踪。检查《产品需求规格说明书》中的每个需求是否都能在后继工作成果中找到对应点。\n(2)逆向跟踪。检查设计文档、代码、测试用例等工作成果是否都能在《产品需求规格说明书》中找到出处。A选项说法错误\n正向跟踪和逆向跟踪合称为“双向跟踪”。不论采用何种跟踪方式，都要建立与维护需求跟踪矩阵(即表格)。需求跟踪矩阵保存了需求与后继工作成果的对应关系。\n跟踪能力是优秀需求规格说明书的一个特征，为了实现可跟踪能力，必须统一地标识出每一个需求，以便能明确地进行查阅。\n需求跟踪是个要求手工操作且劳动强度很大的任务，要求组织提供支持。随着系统开发的进行和维护的执行，要保持关联信息与实际一致。跟踪能力信息一旦过时，可能再也不会重建它。在实际项目中，往往采用专门的配置管理工具来实现需求跟踪。\n",
    "options": [
      {
        "key": "A",
        "text": "正向跟踪是检查设计文档、代码、测试用例等工作成果是否都能在《产品需求规格说明书》中找到出处"
      },
      {
        "key": "B",
        "text": "需求跟踪的目的是建立与维护“需求-设计-编程-测试”之间的一致性"
      },
      {
        "key": "C",
        "text": "需求跟踪包括编制每个需求同系统元素之间的联系文档，这些元素包括别的需求、体系结构、其他设计部件、源代码模块、测试、帮助文件和文档等"
      },
      {
        "key": "D",
        "text": "正向跟踪和逆向跟踪合称为“双向跟踪”"
      }
    ],
    "correctAnswer": "A",
    "explanation": "<p>需求跟踪提供了由需求到产品实现整个过程范围的明确查阅的能力。需求跟踪的目的是建立与维护“需求-设计-编程-测试”之间的一致性，确保所有的工作成果符合用户需求。<br>需求跟踪有两种方式：<br>(1)正向跟踪。检查《产品需求规格说明书》中的每个需求是否都能在后继工作成果中找到对应点。<br>(2)逆向跟踪。检查设计文档、代码、测试用例等工作成果是否都能在《产品需求规格说明书》中找到出处。A选项说法错误<br>正向跟踪和逆向跟踪合称为“双向跟踪”。不论采用何种跟踪方式，都要建立与维护需求跟踪矩阵(即表格)。需求跟踪矩阵保存了需求与后继工作成果的对应关系。<br>跟踪能力是优秀需求规格说明书的一个特征，为了实现可跟踪能力，必须统一地标识出每一个需求，以便能明确地进行查阅。<br>需求跟踪是个要求手工操作且劳动强度很大的任务，要求组织提供支持。随着系统开发的进行和维护的执行，要保持关联信息与实际一致。跟踪能力信息一旦过时，可能再也不会重建它。在实际项目中，往往采用专门的配置管理工具来实现需求跟踪。</p>\n",
    "tags": {
      "knowledge": [
        "数据库系统",
        "数据库设计",
        "软件工程",
        "项目管理"
      ],
      "chapters": [
        "ch04"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "hard",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2025年上半年真题第25题"
  },
  {
    "id": "0065",
    "title": "在逆向工程中用于恢复信息的方法有四类。其中，用户指导下的搜索...",
    "type": "single-choice",
    "content": "# 26.在逆向工程中用于恢复信息的方法有四类。其中，用户指导下的搜索与变换方法用于导出（ ）信息。\n\nA. 实现级和功能级\nB. 实现级和领域级\nC. 实现级和结构级\nD. 功能级和领域级\n\n## 解析\n\n用户指导下的搜索与变换方法主要用于导出实现级和结构级信息。这种方法通过用户指导下的搜索和变换操作，从现有程序中抽象出实现级和结构级的信息。\n除此之外，逆向工程恢复信息的方法还有以下几种：\n变换式方法(Transformation Approaches) 用于导出实现级、结构级、功能级。\n基于领域知识(Domain Knowledge-Based)的方法用于导出功能级、领域级。\n铅板恢复法用于导出实现级、结构级。\n",
    "options": [
      {
        "key": "A",
        "text": "实现级和功能级"
      },
      {
        "key": "B",
        "text": "实现级和领域级"
      },
      {
        "key": "C",
        "text": "实现级和结构级"
      },
      {
        "key": "D",
        "text": "功能级和领域级"
      }
    ],
    "correctAnswer": "C",
    "explanation": "<p>用户指导下的搜索与变换方法主要用于导出实现级和结构级信息。这种方法通过用户指导下的搜索和变换操作，从现有程序中抽象出实现级和结构级的信息。<br>除此之外，逆向工程恢复信息的方法还有以下几种：<br>变换式方法(Transformation Approaches) 用于导出实现级、结构级、功能级。<br>基于领域知识(Domain Knowledge-Based)的方法用于导出功能级、领域级。<br>铅板恢复法用于导出实现级、结构级。</p>\n",
    "tags": {
      "knowledge": [
        "软件工程",
        "逆向工程"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2025年上半年真题第26题"
  },
  {
    "id": "0066",
    "title": "关于数据库的问题(第1空)",
    "type": "single-choice",
    "content": "# 27-28. 数据库三级模式中，（ ）描述了记录的类型和记录间的联系、操作、数据的完整性和安全性，（  ）是用户需要使用的部分数据的描述。\n\n\n**第一个空：**\n\nA. 概念模式\nB. 外模式\nC. 内模式\nD. 存储模式\n\n## 解析\n\n概念模式也称模式，是数据库中全部数据的逻辑结构和特征的描述，它由若干个概念记录类型组成，只涉及“型”的描述，不涉及具体的值。概念模式的一个具体值称为模式的一个实例，同一个模式可以有很多实例。概念模式反映的是数据库的结构及其联系，所以是相对稳定的；而实例反映的是数据库某一时刻的状态，是相对变动的。\n需要说明的是，概念模式不仅要描述概念记录类型，还要描述记录间的联系、操作、数据的完整性和安全性等要求。但是，概念模式不涉及存储结构、访问技术等细节。只有这样，概念模式才算做到了“物理数据独 立性”。\n外模式也称用户模式或子模式，是用户与数据库系统的接口，是用户需要使用的部分数据的描述。它由若干个外部记录类型组成。用户使用数据操纵语言对数据库进行操作，实际上是对外模式的外部记录进行操作。\n内模式也称存储模式，是数据物理结构和存储方式的描述，是数据在数据库内部的表示方式。定义所有的内部记录类型、索引和文件的组织方式，以及数据控制方面的细节。\n总之，数据按外模式的描述提供给用户，按内模式的描述存储在磁盘上，而概念模式提供了连接这两极模式的相对稳定的中间观点，并使得两级的任意一级的改变都不受另一级的牵制。\n",
    "options": [
      {
        "key": "A",
        "text": "概念模式"
      },
      {
        "key": "B",
        "text": "外模式"
      },
      {
        "key": "C",
        "text": "内模式"
      },
      {
        "key": "D",
        "text": "存储模式"
      }
    ],
    "correctAnswer": "A",
    "explanation": "<p>概念模式也称模式，是数据库中全部数据的逻辑结构和特征的描述，它由若干个概念记录类型组成，只涉及“型”的描述，不涉及具体的值。概念模式的一个具体值称为模式的一个实例，同一个模式可以有很多实例。概念模式反映的是数据库的结构及其联系，所以是相对稳定的；而实例反映的是数据库某一时刻的状态，是相对变动的。<br>需要说明的是，概念模式不仅要描述概念记录类型，还要描述记录间的联系、操作、数据的完整性和安全性等要求。但是，概念模式不涉及存储结构、访问技术等细节。只有这样，概念模式才算做到了“物理数据独 立性”。<br>外模式也称用户模式或子模式，是用户与数据库系统的接口，是用户需要使用的部分数据的描述。它由若干个外部记录类型组成。用户使用数据操纵语言对数据库进行操作，实际上是对外模式的外部记录进行操作。<br>内模式也称存储模式，是数据物理结构和存储方式的描述，是数据在数据库内部的表示方式。定义所有的内部记录类型、索引和文件的组织方式，以及数据控制方面的细节。<br>总之，数据按外模式的描述提供给用户，按内模式的描述存储在磁盘上，而概念模式提供了连接这两极模式的相对稳定的中间观点，并使得两级的任意一级的改变都不受另一级的牵制。</p>\n",
    "tags": {
      "knowledge": [
        "数据库系统",
        "数据库设计",
        "信息安全",
        "数据安全"
      ],
      "chapters": [
        "ch05"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 120,
    "source": "2025年上半年真题第27题"
  },
  {
    "id": "0067",
    "title": "关于数据库的问题(第2空)",
    "type": "single-choice",
    "content": "# 27-28. 数据库三级模式中，（ ）描述了记录的类型和记录间的联系、操作、数据的完整性和安全性，（  ）是用户需要使用的部分数据的描述。\n\n\n**第二个空：**\n\nA. 概念模式\nB. 存储模式\nC. 外模式\nD. 内模式\n\n## 解析\n\n概念模式也称模式，是数据库中全部数据的逻辑结构和特征的描述，它由若干个概念记录类型组成，只涉及“型”的描述，不涉及具体的值。概念模式的一个具体值称为模式的一个实例，同一个模式可以有很多实例。概念模式反映的是数据库的结构及其联系，所以是相对稳定的；而实例反映的是数据库某一时刻的状态，是相对变动的。\n需要说明的是，概念模式不仅要描述概念记录类型，还要描述记录间的联系、操作、数据的完整性和安全性等要求。但是，概念模式不涉及存储结构、访问技术等细节。只有这样，概念模式才算做到了“物理数据独 立性”。\n外模式也称用户模式或子模式，是用户与数据库系统的接口，是用户需要使用的部分数据的描述。它由若干个外部记录类型组成。用户使用数据操纵语言对数据库进行操作，实际上是对外模式的外部记录进行操作。\n内模式也称存储模式，是数据物理结构和存储方式的描述，是数据在数据库内部的表示方式。定义所有的内部记录类型、索引和文件的组织方式，以及数据控制方面的细节。\n总之，数据按外模式的描述提供给用户，按内模式的描述存储在磁盘上，而概念模式提供了连接这两极模式的相对稳定的中间观点，并使得两级的任意一级的改变都不受另一级的牵制。\n",
    "options": [
      {
        "key": "A",
        "text": "概念模式"
      },
      {
        "key": "B",
        "text": "存储模式"
      },
      {
        "key": "C",
        "text": "外模式"
      },
      {
        "key": "D",
        "text": "内模式"
      }
    ],
    "correctAnswer": "C",
    "explanation": "<p>概念模式也称模式，是数据库中全部数据的逻辑结构和特征的描述，它由若干个概念记录类型组成，只涉及“型”的描述，不涉及具体的值。概念模式的一个具体值称为模式的一个实例，同一个模式可以有很多实例。概念模式反映的是数据库的结构及其联系，所以是相对稳定的；而实例反映的是数据库某一时刻的状态，是相对变动的。<br>需要说明的是，概念模式不仅要描述概念记录类型，还要描述记录间的联系、操作、数据的完整性和安全性等要求。但是，概念模式不涉及存储结构、访问技术等细节。只有这样，概念模式才算做到了“物理数据独 立性”。<br>外模式也称用户模式或子模式，是用户与数据库系统的接口，是用户需要使用的部分数据的描述。它由若干个外部记录类型组成。用户使用数据操纵语言对数据库进行操作，实际上是对外模式的外部记录进行操作。<br>内模式也称存储模式，是数据物理结构和存储方式的描述，是数据在数据库内部的表示方式。定义所有的内部记录类型、索引和文件的组织方式，以及数据控制方面的细节。<br>总之，数据按外模式的描述提供给用户，按内模式的描述存储在磁盘上，而概念模式提供了连接这两极模式的相对稳定的中间观点，并使得两级的任意一级的改变都不受另一级的牵制。</p>\n",
    "tags": {
      "knowledge": [
        "数据库系统",
        "数据库设计",
        "信息安全",
        "数据安全"
      ],
      "chapters": [
        "ch05"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 120,
    "source": "2025年上半年真题第28题"
  },
  {
    "id": "0068",
    "title": "关于关系的问题",
    "type": "single-choice",
    "content": "# 30.在数据流图中，数据流A经过处理后可以生成数据流B或者数据流C，但不能同时生成数据流B和数据流C，那么B和C之间用（ ）关系表示。\n\nA. ⊕\nB. \\*\nC. O\nD. +\n\n## 解析\n\n![image.png](https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/yBRq1ZPjkr7PKOdv/img/113d774a-d7c5-4ffd-97f1-3667d361a39a.png)\n",
    "options": [
      {
        "key": "A",
        "text": "⊕"
      },
      {
        "key": "B",
        "text": "\\*"
      },
      {
        "key": "C",
        "text": "O"
      },
      {
        "key": "D",
        "text": "+"
      }
    ],
    "correctAnswer": "A",
    "explanation": "<p><img src=\"https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/yBRq1ZPjkr7PKOdv/img/113d774a-d7c5-4ffd-97f1-3667d361a39a.png\" alt=\"image.png\"></p>\n",
    "tags": {
      "knowledge": [
        "数据库系统",
        "数据库设计"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2025年上半年真题第30题"
  },
  {
    "id": "0069",
    "title": "在UML用例图中，用例与用例之间不存在（ ）。",
    "type": "single-choice",
    "content": "# 31.在UML用例图中，用例与用例之间不存在（ ）。\n\nA. 包含关系\nB. 泛化关系\nC. 扩展关系\nD. 聚合关系\n",
    "options": [
      {
        "key": "A",
        "text": "包含关系"
      },
      {
        "key": "B",
        "text": "泛化关系"
      },
      {
        "key": "C",
        "text": "扩展关系"
      },
      {
        "key": "D",
        "text": "聚合关系"
      }
    ],
    "correctAnswer": "D",
    "explanation": "",
    "tags": {
      "knowledge": [
        "软件架构",
        "架构设计"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2025年上半年真题第31题"
  },
  {
    "id": "0072",
    "title": "一个对象将另一个对象的能力与特点进行完全的继承之后，又继承了...",
    "type": "single-choice",
    "content": "# 34.一个对象将另一个对象的能力与特点进行完全的继承之后，又继承了其他对象的相应内容，使得这个对象所具有的能力与特点大于等于父对象，这种继承属于（ ）。\n\nA. 特化继承\nB. 取代继承\nC. 受限继承\nD. 包含继承\n",
    "options": [
      {
        "key": "A",
        "text": "特化继承"
      },
      {
        "key": "B",
        "text": "取代继承"
      },
      {
        "key": "C",
        "text": "受限继承"
      },
      {
        "key": "D",
        "text": "包含继承"
      }
    ],
    "correctAnswer": "D",
    "explanation": "",
    "tags": {
      "knowledge": [
        "面向对象",
        "继承机制"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2025年上半年真题第34题"
  },
  {
    "id": "0073",
    "title": "某公司有100人，其中会Java语言的有45人，会C语言的有...",
    "type": "single-choice",
    "content": "# 35.某公司有100人，其中会Java语言的有45人，会C语言的有53人，会Python语言的有55人，既会Java语言也会C语言的有28人，既会C语言也会Python语言的有32人，既会Python语言也会Java语言的有35人，三种语言都会的有20，那么三种语言都不会的有（）人。\n\nA. 21\nB. 20\nC. 23\nD. 22\n\n## 解析\n\n∣A∪B∪C∣=∣A∣+∣B∣+∣C∣−∣A∩B∣−∣A∩C∣−∣B∩C∣+∣A∩B∩C∣\n即，三个集合的并集的元素数量，等于每个集合元素的数量的和，减去每两个集合交集的元素数量，加上三个集合交集的元素数量。\n设会Java语言的人数是∣A∣ = 45\n设会C语言的人数是∣B∣= 53\n设会Python语言的人数是∣C∣ = 55\n同时会Java语言也会C语言的人数表示为∣A∩B∣ = 28\n同时会C语言也会Python语言的人数表示为∣B∩C∣ = 32\n同时会Python语言也会Java语言的人数表示为∣A∩C∣ = 35\n同时会三种语言的人数表示为∣A∩B∩C∣= 20\n总共参与调查的人数为∣A∪B∪C∣= 100\n会一种语言的人数为∣A∣+∣B∣+∣C∣−∣A∩B∣−∣A∩C∣−∣B∩C∣+∣A∩B∩C∣\n\\=45+53+55-28-32-35+20=78\n三种语言都不会的人数可以表示为：\n∣U∣-∣A∪B∪C∣=100-78=22\n",
    "options": [
      {
        "key": "A",
        "text": "21"
      },
      {
        "key": "B",
        "text": "20"
      },
      {
        "key": "C",
        "text": "23"
      },
      {
        "key": "D",
        "text": "22"
      }
    ],
    "correctAnswer": "D",
    "explanation": "<p>∣A∪B∪C∣=∣A∣+∣B∣+∣C∣−∣A∩B∣−∣A∩C∣−∣B∩C∣+∣A∩B∩C∣<br>即，三个集合的并集的元素数量，等于每个集合元素的数量的和，减去每两个集合交集的元素数量，加上三个集合交集的元素数量。<br>设会Java语言的人数是∣A∣ = 45<br>设会C语言的人数是∣B∣= 53<br>设会Python语言的人数是∣C∣ = 55<br>同时会Java语言也会C语言的人数表示为∣A∩B∣ = 28<br>同时会C语言也会Python语言的人数表示为∣B∩C∣ = 32<br>同时会Python语言也会Java语言的人数表示为∣A∩C∣ = 35<br>同时会三种语言的人数表示为∣A∩B∩C∣= 20<br>总共参与调查的人数为∣A∪B∪C∣= 100<br>会一种语言的人数为∣A∣+∣B∣+∣C∣−∣A∩B∣−∣A∩C∣−∣B∩C∣+∣A∩B∩C∣<br>=45+53+55-28-32-35+20=78<br>三种语言都不会的人数可以表示为：<br>∣U∣-∣A∪B∪C∣=100-78=22</p>\n",
    "tags": {
      "knowledge": [
        "数学基础",
        "集合论"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 120,
    "source": "2025年上半年真题第35题"
  },
  {
    "id": "0074",
    "title": "在REST API中，（ ）用于对一个资源进行部分修改，而不...",
    "type": "single-choice",
    "content": "# 36.在REST API中，（ ）用于对一个资源进行部分修改，而不需要发送整个资源的完整表示。\n\nA. PART\nB. POST\nC. PUT\nD. PATCH\n\n## 解析\n\nB选项POST方法通常用于向服务器提交数据，以创建新的资源或执行某些操作。它并不专门用于对已有资源进行部分修改。\nC选项PUT方法用于替换整个资源。客户端需要发送资源的完整内容到服务器，服务器会用请求中的数据完全替换服务器上对应的资源。如果客户端只提供了部分数据，服务器可能会将未提供的字段设置为默认值或清空。\nD选项PATCH方法用于对资源进行部分修改。它允许客户端只发送需要修改的部分数据，而不是整个资源的完整内容。服务器接收到PATCH请求后，会根据请求中提供的信息对资源进行相应的更新。本题选择D选项。\n",
    "options": [
      {
        "key": "A",
        "text": "PART"
      },
      {
        "key": "B",
        "text": "POST"
      },
      {
        "key": "C",
        "text": "PUT"
      },
      {
        "key": "D",
        "text": "PATCH"
      }
    ],
    "correctAnswer": "D",
    "explanation": "<p>B选项POST方法通常用于向服务器提交数据，以创建新的资源或执行某些操作。它并不专门用于对已有资源进行部分修改。<br>C选项PUT方法用于替换整个资源。客户端需要发送资源的完整内容到服务器，服务器会用请求中的数据完全替换服务器上对应的资源。如果客户端只提供了部分数据，服务器可能会将未提供的字段设置为默认值或清空。<br>D选项PATCH方法用于对资源进行部分修改。它允许客户端只发送需要修改的部分数据，而不是整个资源的完整内容。服务器接收到PATCH请求后，会根据请求中提供的信息对资源进行相应的更新。本题选择D选项。</p>\n",
    "tags": {
      "knowledge": [
        "计算机网络",
        "网络协议"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2025年上半年真题第36题"
  },
  {
    "id": "0075",
    "title": "在典型强实时调度算法中，（ ）算法是根据任务的紧急程度确定任...",
    "type": "single-choice",
    "content": "# 37.在典型强实时调度算法中，（ ）算法是根据任务的紧急程度确定任务的优先级。\n\nA. Earliest Deadline First\nB. First In First Out Scheduling\nC. Least Laxity First\nD. Rate Monotonic Scheduling\n\n## 解析\n\n最低松弛度优先(LLF)算法：根据任务紧急(或松弛)的程度,来确定任务的优先级。任务的紧急程度愈高,为该任务所赋予的优先级就愈高,使之优先执行。\n单调速率调度（Rate Monotonic Scheduling, RMS）算法：是一种静态优先级调度算法，是经典的周期性任务调度算法。RMS的基本思路是任务的优先级与它的周期表现为单调函数的关系，任务的周期越短，优先级越高；任务的周期越长，优先级越低。\n",
    "options": [
      {
        "key": "A",
        "text": "Earliest Deadline First"
      },
      {
        "key": "B",
        "text": "First In First Out Scheduling"
      },
      {
        "key": "C",
        "text": "Least Laxity First"
      },
      {
        "key": "D",
        "text": "Rate Monotonic Scheduling"
      }
    ],
    "correctAnswer": "C",
    "explanation": "<p>最低松弛度优先(LLF)算法：根据任务紧急(或松弛)的程度,来确定任务的优先级。任务的紧急程度愈高,为该任务所赋予的优先级就愈高,使之优先执行。<br>单调速率调度（Rate Monotonic Scheduling, RMS）算法：是一种静态优先级调度算法，是经典的周期性任务调度算法。RMS的基本思路是任务的优先级与它的周期表现为单调函数的关系，任务的周期越短，优先级越高；任务的周期越长，优先级越低。</p>\n",
    "tags": {
      "knowledge": [
        "数据库系统",
        "数据库设计"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2025年上半年真题第37题"
  },
  {
    "id": "0077",
    "title": "关于测试的问题",
    "type": "single-choice",
    "content": "# 39. 在进行单元测试时，（ ）是设计测试用例的依据。\n\nA. 需求分析文档\nB. 详细设计文档\nC. 项目计划文档\nD. 概要设计文档\n\n## 解析\n\n单元测试也称为模块测试，测试的对象是可独 立编译或汇编的程序模块、软件构件或软件中的类（统称为模块），其目的是检查每个模块能否正确地实现设计说明中的功能、性能、接口和其他设计约束等条件，发现模块内可能存在的各种差错。单元测试的技术依据是软件详细设计说明书。\n集成测试的目的是检查模块之间，以及模块和已集成的软件之间的接口关系，并验证已集成的软件是否符合设计要求。集成测试的技术依据是软件概要设计文档。集成测试是根据软件概要设计文档来进行测试，因为概要设计文档中涉及了功能信息的相关信息及要求。\n系统测试的对象是完整的、集成的计算机系统，系统测试的目的是在真实系统工作环境下，验证完整的软件配置项能否和系统正确连接，并满足系统或子系统设计文档和软件开发合同规定的要求。系统测试的技术依据是用户需求或开发合同，除应满足一般测试的准入条件外，在进行系统测试前，还应确认被测系统的所有配置项已通过测试，对需要固化运行的软件还应提供固件。\n回归测试的目的是测试软件变更之后，变更部分的正确性和对变更需求的符合性，以及软件原有的、正确的功能、性能和其他规定的要求的不损害性。\n综上，答案选择B选项。\n",
    "options": [
      {
        "key": "A",
        "text": "需求分析文档"
      },
      {
        "key": "B",
        "text": "详细设计文档"
      },
      {
        "key": "C",
        "text": "项目计划文档"
      },
      {
        "key": "D",
        "text": "概要设计文档"
      }
    ],
    "correctAnswer": "B",
    "explanation": "<p>单元测试也称为模块测试，测试的对象是可独 立编译或汇编的程序模块、软件构件或软件中的类（统称为模块），其目的是检查每个模块能否正确地实现设计说明中的功能、性能、接口和其他设计约束等条件，发现模块内可能存在的各种差错。单元测试的技术依据是软件详细设计说明书。<br>集成测试的目的是检查模块之间，以及模块和已集成的软件之间的接口关系，并验证已集成的软件是否符合设计要求。集成测试的技术依据是软件概要设计文档。集成测试是根据软件概要设计文档来进行测试，因为概要设计文档中涉及了功能信息的相关信息及要求。<br>系统测试的对象是完整的、集成的计算机系统，系统测试的目的是在真实系统工作环境下，验证完整的软件配置项能否和系统正确连接，并满足系统或子系统设计文档和软件开发合同规定的要求。系统测试的技术依据是用户需求或开发合同，除应满足一般测试的准入条件外，在进行系统测试前，还应确认被测系统的所有配置项已通过测试，对需要固化运行的软件还应提供固件。<br>回归测试的目的是测试软件变更之后，变更部分的正确性和对变更需求的符合性，以及软件原有的、正确的功能、性能和其他规定的要求的不损害性。<br>综上，答案选择B选项。</p>\n",
    "tags": {
      "knowledge": [
        "数据库系统",
        "数据库设计",
        "软件工程",
        "项目管理",
        "系统质量",
        "非功能需求"
      ],
      "chapters": [
        "ch04"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "medium",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 120,
    "source": "2025年上半年真题第39题"
  },
  {
    "id": "0079",
    "title": "RUP把软件开发生命周期划分为多个循环，每个循环生成产品的一...",
    "type": "single-choice",
    "content": "# 41.RUP把软件开发生命周期划分为多个循环，每个循环生成产品的一个新的版本，每个循环依次由多个连续的阶段组成。其中，设计及确定系统的体系结构、制定工作计划及资源要求是（ ）阶段主要活动。\n\nA. 初始\nB. 构造\nC. 移交\nD. 细化\n\n## 解析\n\n每个循环依次由4个连续的阶段 (Phase) 组成，每个阶段完成确定的任务。这4个阶段如下：\n初始 (inception) 阶段：定义最终产品视图和业务模型，并确定系统范围。\n细化 (elaboration) 阶段：设计及确定系统的体系结构，制订工作计划及资源要求。本题选择D选项。\n构造 (construction) 阶段：构造产品并继续演进需求、体系结构、计划直至产品提交。\n移交 (transition) 阶段：把产品提交给用户使用。\n",
    "options": [
      {
        "key": "A",
        "text": "初始"
      },
      {
        "key": "B",
        "text": "构造"
      },
      {
        "key": "C",
        "text": "移交"
      },
      {
        "key": "D",
        "text": "细化"
      }
    ],
    "correctAnswer": "D",
    "explanation": "<p>每个循环依次由4个连续的阶段 (Phase) 组成，每个阶段完成确定的任务。这4个阶段如下：<br>初始 (inception) 阶段：定义最终产品视图和业务模型，并确定系统范围。<br>细化 (elaboration) 阶段：设计及确定系统的体系结构，制订工作计划及资源要求。本题选择D选项。<br>构造 (construction) 阶段：构造产品并继续演进需求、体系结构、计划直至产品提交。<br>移交 (transition) 阶段：把产品提交给用户使用。</p>\n",
    "tags": {
      "knowledge": [
        "软件工程",
        "开发模型"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "hard",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2025年上半年真题第41题"
  },
  {
    "id": "0080",
    "title": "关于测试的问题",
    "type": "single-choice",
    "content": "# 42.关于白盒测试，下列说法正确的是（ ）。\n\nA. 条件覆盖不一定包含判定覆盖，判定覆盖也不一定包含条件覆盖\nB. 语句覆盖比判定覆盖强\nC. 条件覆盖比判定覆盖强\nD. 条件组合覆盖保证程序中所有可能的路径都至少遍历一次\n\n## 解析\n\n（1）语句覆盖。语句覆盖是指选择足够多的测试用例，使得运行这些测试用例时，被测程序的每个语句至少执行一次。很显然，语句覆盖是一种很弱的覆盖标准。\n（2）判定覆盖。判定覆盖又称分支覆盖，它的含义是，不仅每个语句至少执行一次，而且每个判定的每种可能的结果（分支）都至少执行一次。判定覆盖比语句覆盖强，但对程序逻辑的覆盖程度仍然不高。\n（3）条件覆盖。条件覆盖的含义是，不仅每个语句至少执行一次，而且使判定表达式中的每个条件都取得各种可能的结果。条件覆盖不一定包含判定覆盖，判定覆盖也不一定包含条件覆盖。\n（4）判定/条件覆盖。同时满足判定覆盖和条件覆盖的逻辑覆盖称为判定/条件覆盖。它的含义是，选取足够的测试用例，使得判定表达式中每个条件的所有可能结果至少出现一次，而且每个判定本身的所有可能结果也至少出现一次。\n（5）条件组合覆盖。条件组合覆盖的含义是，选取足够的测试用例，使得每个判定表达式中条件结果的所有可能组合至少出现一次。显然，满足条件组合覆盖的测试用例，也一定满足判定/条件覆盖。因此，条件组合覆盖是上述5种覆盖标准中最强的一种。然而，条件组合覆盖还不能保证程序中所有可能的路径都至少经过一次。\n（6）路径覆盖。路径覆盖的含义是，选取足够的测试用例，使得程序的每条可能执行到的路径都至少经过一次（如果程序中有环路，则要求每条环路路径至少经过一次）。\n",
    "options": [
      {
        "key": "A",
        "text": "条件覆盖不一定包含判定覆盖，判定覆盖也不一定包含条件覆盖"
      },
      {
        "key": "B",
        "text": "语句覆盖比判定覆盖强"
      },
      {
        "key": "C",
        "text": "条件覆盖比判定覆盖强"
      },
      {
        "key": "D",
        "text": "条件组合覆盖保证程序中所有可能的路径都至少遍历一次"
      }
    ],
    "correctAnswer": "A",
    "explanation": "<p>（1）语句覆盖。语句覆盖是指选择足够多的测试用例，使得运行这些测试用例时，被测程序的每个语句至少执行一次。很显然，语句覆盖是一种很弱的覆盖标准。<br>（2）判定覆盖。判定覆盖又称分支覆盖，它的含义是，不仅每个语句至少执行一次，而且每个判定的每种可能的结果（分支）都至少执行一次。判定覆盖比语句覆盖强，但对程序逻辑的覆盖程度仍然不高。<br>（3）条件覆盖。条件覆盖的含义是，不仅每个语句至少执行一次，而且使判定表达式中的每个条件都取得各种可能的结果。条件覆盖不一定包含判定覆盖，判定覆盖也不一定包含条件覆盖。<br>（4）判定/条件覆盖。同时满足判定覆盖和条件覆盖的逻辑覆盖称为判定/条件覆盖。它的含义是，选取足够的测试用例，使得判定表达式中每个条件的所有可能结果至少出现一次，而且每个判定本身的所有可能结果也至少出现一次。<br>（5）条件组合覆盖。条件组合覆盖的含义是，选取足够的测试用例，使得每个判定表达式中条件结果的所有可能组合至少出现一次。显然，满足条件组合覆盖的测试用例，也一定满足判定/条件覆盖。因此，条件组合覆盖是上述5种覆盖标准中最强的一种。然而，条件组合覆盖还不能保证程序中所有可能的路径都至少经过一次。<br>（6）路径覆盖。路径覆盖的含义是，选取足够的测试用例，使得程序的每条可能执行到的路径都至少经过一次（如果程序中有环路，则要求每条环路路径至少经过一次）。</p>\n",
    "tags": {
      "knowledge": [
        "软件工程",
        "项目管理"
      ],
      "chapters": [
        "ch04"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 120,
    "source": "2025年上半年真题第42题"
  },
  {
    "id": "0081",
    "title": "申请软件著作权登记时应当向中国版权保护中心提交软件的鉴别材料...",
    "type": "single-choice",
    "content": "# 43.申请软件著作权登记时应当向中国版权保护中心提交软件的鉴别材料，具体包括（ ）。\n\nA. 程序和文档的鉴别材料\nB. 程序和著作权归属书面合同的鉴别材料\nC. 程序和数据的鉴别材料\nD. 数据和文档的鉴别材料\n\n## 解析\n\n程序的鉴别材料：通常指程序的源代码或目标代码。源代码是程序员编写的原始代码，而目标代码是编译器将源代码转换后的可执行代码。\n文档的鉴别材料：指与软件相关的设计文档、用户手册、操作指南等。这些文档应详细描述软件的功能、设计思路、使用方法等。\n",
    "options": [
      {
        "key": "A",
        "text": "程序和文档的鉴别材料"
      },
      {
        "key": "B",
        "text": "程序和著作权归属书面合同的鉴别材料"
      },
      {
        "key": "C",
        "text": "程序和数据的鉴别材料"
      },
      {
        "key": "D",
        "text": "数据和文档的鉴别材料"
      }
    ],
    "correctAnswer": "A",
    "explanation": "<p>程序的鉴别材料：通常指程序的源代码或目标代码。源代码是程序员编写的原始代码，而目标代码是编译器将源代码转换后的可执行代码。<br>文档的鉴别材料：指与软件相关的设计文档、用户手册、操作指南等。这些文档应详细描述软件的功能、设计思路、使用方法等。</p>\n",
    "tags": {
      "knowledge": [
        "法律法规",
        "知识产权"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "hard",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2025年上半年真题第43题"
  },
  {
    "id": "0082",
    "title": "软件著作权人享有多项权利，其中（ ）指决定软件是否公之于众的...",
    "type": "single-choice",
    "content": "# 44.软件著作权人享有多项权利，其中（ ）指决定软件是否公之于众的权利。\n\nA. 信息网络传播权\nB. 发表权\nC. 发行权\nD. 转让权\n\n## 解析\n\n(一)发表权，即决定软件是否公之于众的权利;\n(二)署名权，即表明开发者身份，在软件上署名的权利;\n(三)修改权，即对软件进行增补、删节，或者改变指令、语句顺序的权利;\n(四)复制权，即将软件制作一份或者多份的权利;\n(五)发行权，即以出售或者赠与方式向公众提供软件的原件或者复制件的权利;\n(六)出租权，即有偿许可他人临时使用软件的权利，但是软件不是出租的主要标的除外;\n(七)信息网络传播权，即以有线或者无线方式向公众提供软件，使公众可以在其个人选定的时间和地点获得软件的权利;\n(八)翻译权，即将原软件从一种自然语言文字转换成另一种自然语言文字的权利;\n(九)应当由软件著作权人享有的其他权利。\n",
    "options": [
      {
        "key": "A",
        "text": "信息网络传播权"
      },
      {
        "key": "B",
        "text": "发表权"
      },
      {
        "key": "C",
        "text": "发行权"
      },
      {
        "key": "D",
        "text": "转让权"
      }
    ],
    "correctAnswer": "B",
    "explanation": "<p>(一)发表权，即决定软件是否公之于众的权利;<br>(二)署名权，即表明开发者身份，在软件上署名的权利;<br>(三)修改权，即对软件进行增补、删节，或者改变指令、语句顺序的权利;<br>(四)复制权，即将软件制作一份或者多份的权利;<br>(五)发行权，即以出售或者赠与方式向公众提供软件的原件或者复制件的权利;<br>(六)出租权，即有偿许可他人临时使用软件的权利，但是软件不是出租的主要标的除外;<br>(七)信息网络传播权，即以有线或者无线方式向公众提供软件，使公众可以在其个人选定的时间和地点获得软件的权利;<br>(八)翻译权，即将原软件从一种自然语言文字转换成另一种自然语言文字的权利;<br>(九)应当由软件著作权人享有的其他权利。</p>\n",
    "tags": {
      "knowledge": [
        "计算机网络",
        "网络协议"
      ],
      "chapters": [
        "ch03"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2025年上半年真题第44题"
  },
  {
    "id": "0083",
    "title": "关于架构的问题",
    "type": "single-choice",
    "content": "# 45.工业大模型体系架构中，在基础设施层和应用层中间的是（ ）。\n\nA. 基座层、数据层、模型层\nB. 模型层、数据层、交互层\nC. 基座层、模型层、交互层\nD. 基座层、逻辑层、模型层\n\n## 解析\n\n架构为核心框架，涵盖底层基础设施到顶层应用的完整技术链条。工业大模型体系架构图如下：\n![image.png](https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/yBRq1ZPjkr7PKOdv/img/7e18d191-b128-4515-9822-ff4c9c535b54.png)\n",
    "options": [
      {
        "key": "A",
        "text": "基座层、数据层、模型层"
      },
      {
        "key": "B",
        "text": "模型层、数据层、交互层"
      },
      {
        "key": "C",
        "text": "基座层、模型层、交互层"
      },
      {
        "key": "D",
        "text": "基座层、逻辑层、模型层"
      }
    ],
    "correctAnswer": "C",
    "explanation": "<p>架构为核心框架，涵盖底层基础设施到顶层应用的完整技术链条。工业大模型体系架构图如下：<br><img src=\"https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/yBRq1ZPjkr7PKOdv/img/7e18d191-b128-4515-9822-ff4c9c535b54.png\" alt=\"image.png\"></p>\n",
    "tags": {
      "knowledge": [
        "软件架构",
        "架构设计"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "medium",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2025年上半年真题第45题"
  },
  {
    "id": "0085",
    "title": "关于测试的问题",
    "type": "single-choice",
    "content": "# 47.黑盒测试使用到的方法不包括（ ）。\n\nA. 路径覆盖\nB. 边界值分析\nC. 等价类划分\nD. 因果图\n\n## 解析\n\n动态测试是通过运行程序发现错误，包括黑盒测试（等价类划分、边界值分析法、错误推测法、因果图等等）与白盒测试（各种类型的覆盖测试）。这里A选项路径覆盖属于白盒测试，而不是黑盒测试。\n静态测试是人工测试方式，包括桌前检查（桌面检查）、代码走查、代码审查。\n本题选择A选项。\n",
    "options": [
      {
        "key": "A",
        "text": "路径覆盖"
      },
      {
        "key": "B",
        "text": "边界值分析"
      },
      {
        "key": "C",
        "text": "等价类划分"
      },
      {
        "key": "D",
        "text": "因果图"
      }
    ],
    "correctAnswer": "A",
    "explanation": "<p>动态测试是通过运行程序发现错误，包括黑盒测试（等价类划分、边界值分析法、错误推测法、因果图等等）与白盒测试（各种类型的覆盖测试）。这里A选项路径覆盖属于白盒测试，而不是黑盒测试。<br>静态测试是人工测试方式，包括桌前检查（桌面检查）、代码走查、代码审查。<br>本题选择A选项。</p>\n",
    "tags": {
      "knowledge": [
        "软件工程",
        "项目管理"
      ],
      "chapters": [
        "ch04"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "medium",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2025年上半年真题第47题"
  },
  {
    "id": "0086",
    "title": "边缘计算的核心思想是将计算任务从中心节点转移到数据产生的边缘...",
    "type": "single-choice",
    "content": "# 48.边缘计算的核心思想是将计算任务从中心节点转移到数据产生的边缘节点，以下不属于边缘计算特点的是（ ）。\n\nA. 降低功耗\nB. 降低延迟\nC. 提高带宽\nD. 提高安全性\n\n## 解析\n\nB选项降低延迟：在边缘计算中，数据在产生的边缘节点进行处理，无需传输到远程的中心节点，从而大大减少了数据传输的延迟。所以降低延迟是边缘计算的核心优势之一。\nC选项提高带宽：边缘计算实际上是通过减少数据传输量来降低对带宽的需求。由于数据在边缘节点进行处理，只有必要的结果或摘要数据才需要传输到中心节点，因此并不直接提高带宽。相反，它可能通过优化数据传输来更有效地利用现有带宽。所以提高带宽不属于边缘计算的特点。\nD选项提高安全性：边缘计算通过将数据处理分散到多个边缘节点，减少了数据在传输过程中的暴露风险。同时，边缘节点可以实施更严格的安全策略，如数据加密、访问控制等，从而提高了整体的安全性。此外，边缘计算还可以减少对中心节点的依赖，降低了因中心节点故障或被攻击而导致的安全风险。所以提高安全性是边缘计算的一个重要特点。\n",
    "options": [
      {
        "key": "A",
        "text": "降低功耗"
      },
      {
        "key": "B",
        "text": "降低延迟"
      },
      {
        "key": "C",
        "text": "提高带宽"
      },
      {
        "key": "D",
        "text": "提高安全性"
      }
    ],
    "correctAnswer": "C",
    "explanation": "<p>B选项降低延迟：在边缘计算中，数据在产生的边缘节点进行处理，无需传输到远程的中心节点，从而大大减少了数据传输的延迟。所以降低延迟是边缘计算的核心优势之一。<br>C选项提高带宽：边缘计算实际上是通过减少数据传输量来降低对带宽的需求。由于数据在边缘节点进行处理，只有必要的结果或摘要数据才需要传输到中心节点，因此并不直接提高带宽。相反，它可能通过优化数据传输来更有效地利用现有带宽。所以提高带宽不属于边缘计算的特点。<br>D选项提高安全性：边缘计算通过将数据处理分散到多个边缘节点，减少了数据在传输过程中的暴露风险。同时，边缘节点可以实施更严格的安全策略，如数据加密、访问控制等，从而提高了整体的安全性。此外，边缘计算还可以减少对中心节点的依赖，降低了因中心节点故障或被攻击而导致的安全风险。所以提高安全性是边缘计算的一个重要特点。</p>\n",
    "tags": {
      "knowledge": [
        "信息安全",
        "数据安全"
      ],
      "chapters": [
        "ch11"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "medium",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2025年上半年真题第48题"
  },
  {
    "id": "0088",
    "title": "关于测试的问题",
    "type": "single-choice",
    "content": "# 50. 以下关于软件测试与调试说法错误的是（ ）。\n\nA. 测试是调试之后的活动，测试和调试在目标、方法和思路上都有所不同\nB. 测试从一个已知的条件开始，使用预先定义的过程，有预知的结果；调试从一个未知的条件开始，结束的过程不可预计\nC. 测试过程可以事先设计，进度可以事先确定；而调试不能描述过程或持续时间\nD. 测试的目的是找出程序中存在的错误，而调试的目的是定位错误并且修改程序以修正错误\n\n## 解析\n\n（1）测试的目的是找出存在的错误，而调试的目的是定位错误并修改程序以修正错误。\n（2）调试是测试之后的活动，测试和调试在目标方法和思路上都有所不同。A选项错误。\n（3）测试从一个已知的条件开始，使用预先定义的过程，有预知的结果；调试从一个未知的条件开始，结束的过程不可预计。\n（4）测试过程可以事先设计，进度可以事先确定；调试不能描述过程或持续时间。\n",
    "options": [
      {
        "key": "A",
        "text": "测试是调试之后的活动，测试和调试在目标、方法和思路上都有所不同"
      },
      {
        "key": "B",
        "text": "测试从一个已知的条件开始，使用预先定义的过程，有预知的结果；调试从一个未知的条件开始，结束的过程不可预计"
      },
      {
        "key": "C",
        "text": "测试过程可以事先设计，进度可以事先确定；而调试不能描述过程或持续时间"
      },
      {
        "key": "D",
        "text": "测试的目的是找出程序中存在的错误，而调试的目的是定位错误并且修改程序以修正错误"
      }
    ],
    "correctAnswer": "A",
    "explanation": "<p>（1）测试的目的是找出存在的错误，而调试的目的是定位错误并修改程序以修正错误。<br>（2）调试是测试之后的活动，测试和调试在目标方法和思路上都有所不同。A选项错误。<br>（3）测试从一个已知的条件开始，使用预先定义的过程，有预知的结果；调试从一个未知的条件开始，结束的过程不可预计。<br>（4）测试过程可以事先设计，进度可以事先确定；调试不能描述过程或持续时间。</p>\n",
    "tags": {
      "knowledge": [
        "软件工程",
        "项目管理"
      ],
      "chapters": [
        "ch04"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "hard",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2025年上半年真题第50题"
  },
  {
    "id": "0090",
    "title": "在UML活动图中，（ ）是原子的，不能被分解、没有内部转移、...",
    "type": "single-choice",
    "content": "# 52.在UML活动图中，（ ）是原子的，不能被分解、没有内部转移、没有内部活动，它的工作所占用的时间可以忽略。\n\nA. 活动状态\nB. 初始状态态\nC. 动作状态\nD. 原子状态\n\n## 解析\n\nB选项初始状态只是活动图的一个起始标记，它并不执行任何实际的操作或任务，也不存在工作时间这一概念。\nC选项动作状态是UML活动图中最基本的、不可再分的执行单元，具有原子性，即不能再被分解成更小的部分。一旦进入动作状态，系统就会执行该动作所定义的操作，并且在执行过程中不存在内部转移，也就是不会在动作状态内部因为某些条件而跳转到其他状态。动作状态执行的操作通常是简单的、瞬时的，其工作所占用的时间可以忽略不计。\nD选项原子状态，在标准的UML活动图概念中，并没有“原子状态”这个特定术语。\n本题主要注意区分活动状态和动作状态。\n动作状态是原子的，不能被分解，没有内部转移，没有内部活动，动作状态占用的时间是可以忽略的，动作状态的目的是执行进入动作，然后转向另一个状态。\n活动状态是可以分解的，不是原子的，其完成工作需要一定的时间。\n",
    "options": [
      {
        "key": "A",
        "text": "活动状态"
      },
      {
        "key": "B",
        "text": "初始状态态"
      },
      {
        "key": "C",
        "text": "动作状态"
      },
      {
        "key": "D",
        "text": "原子状态"
      }
    ],
    "correctAnswer": "C",
    "explanation": "<p>B选项初始状态只是活动图的一个起始标记，它并不执行任何实际的操作或任务，也不存在工作时间这一概念。<br>C选项动作状态是UML活动图中最基本的、不可再分的执行单元，具有原子性，即不能再被分解成更小的部分。一旦进入动作状态，系统就会执行该动作所定义的操作，并且在执行过程中不存在内部转移，也就是不会在动作状态内部因为某些条件而跳转到其他状态。动作状态执行的操作通常是简单的、瞬时的，其工作所占用的时间可以忽略不计。<br>D选项原子状态，在标准的UML活动图概念中，并没有“原子状态”这个特定术语。<br>本题主要注意区分活动状态和动作状态。<br>动作状态是原子的，不能被分解，没有内部转移，没有内部活动，动作状态占用的时间是可以忽略的，动作状态的目的是执行进入动作，然后转向另一个状态。<br>活动状态是可以分解的，不是原子的，其完成工作需要一定的时间。</p>\n",
    "tags": {
      "knowledge": [
        "软件建模",
        "UML"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2025年上半年真题第52题"
  },
  {
    "id": "0093",
    "title": "关于安全的问题",
    "type": "single-choice",
    "content": "# 55.开放系统互联安全体系的五类安全服务包括（ ）。\n\nA. 鉴别、访问控制、安全防御、数据机密性和抗抵赖性\nB. 鉴别、访问控制、数据机密性、数据完整性和安全防御\nC. 鉴别、访问控制、数据机密性、数据完整性和抗抵赖性\nD. 访问控制、安全防御、数据机密性、数据完整性和抗抵赖性\n\n## 解析\n\n鉴别：确保通信的实体是它所声称的实体，即确认对方的真实身份。\n访问控制：防止对资源的未授权使用，包括防止以未授权方式使用某一资源。\n数据机密性：保护数据不被未授权的实体所知悉。\n数据完整性：确保数据在传输或存储过程中未被篡改、破坏或丢失。\n抗抵赖性：防止通信双方中的任何一方对自己曾执行过的操作加以否认。\n",
    "options": [
      {
        "key": "A",
        "text": "鉴别、访问控制、安全防御、数据机密性和抗抵赖性"
      },
      {
        "key": "B",
        "text": "鉴别、访问控制、数据机密性、数据完整性和安全防御"
      },
      {
        "key": "C",
        "text": "鉴别、访问控制、数据机密性、数据完整性和抗抵赖性"
      },
      {
        "key": "D",
        "text": "访问控制、安全防御、数据机密性、数据完整性和抗抵赖性"
      }
    ],
    "correctAnswer": "C",
    "explanation": "<p>鉴别：确保通信的实体是它所声称的实体，即确认对方的真实身份。<br>访问控制：防止对资源的未授权使用，包括防止以未授权方式使用某一资源。<br>数据机密性：保护数据不被未授权的实体所知悉。<br>数据完整性：确保数据在传输或存储过程中未被篡改、破坏或丢失。<br>抗抵赖性：防止通信双方中的任何一方对自己曾执行过的操作加以否认。</p>\n",
    "tags": {
      "knowledge": [
        "信息安全",
        "数据安全",
        "通信技术"
      ],
      "chapters": [
        "ch03"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2025年上半年真题第55题"
  },
  {
    "id": "0094",
    "title": "关于关系的问题",
    "type": "single-choice",
    "content": "# 56.已知关系R（a,b,c,d）和R上的函数依赖F=（a->cd，c->b），则R的候选码是（ ）。\n\nA. c\nB. d\nC. a\nD. b\n\n## 解析\n\n![image.png](https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/yBRq1ZPjkr7PKOdv/img/a955ec60-820f-491e-b8fd-eadadab6d4f7.png)\n从图中可以很直观地看出，入度为零的节点是a，从这个节点出发，能遍历全图，所以a为候选码。\n",
    "options": [
      {
        "key": "A",
        "text": "c"
      },
      {
        "key": "B",
        "text": "d"
      },
      {
        "key": "C",
        "text": "a"
      },
      {
        "key": "D",
        "text": "b"
      }
    ],
    "correctAnswer": "C",
    "explanation": "<p><img src=\"https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/yBRq1ZPjkr7PKOdv/img/a955ec60-820f-491e-b8fd-eadadab6d4f7.png\" alt=\"image.png\"><br>从图中可以很直观地看出，入度为零的节点是a，从这个节点出发，能遍历全图，所以a为候选码。</p>\n",
    "tags": {
      "knowledge": [
        "数据库系统",
        "数据库设计"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2025年上半年真题第56题"
  },
  {
    "id": "0097",
    "title": "下列选项中会导致线程从执行态变为就绪态的是（ ）。",
    "type": "single-choice",
    "content": "# 59. 下列选项中会导致线程从执行态变为就绪态的是（ ）。\n\nA. 键盘输入\nB. 主动让出CPU\nC. 执行信号量的wait（）操作\nD. 缺页异常\n\n## 解析\n\n执行态：当任务已获得处理机，其程序正在处理执行态机上执行，此时的任务状态称为执行状态。\n就绪态：当任务已分配到除CPU以外的所有必要的资源，只要获得处理机便可立即执行，这时的任务状态称为就绪状态。\n阻塞态：正在执行的任务，由于等待某个事件发生而无法执行时，便放弃处理机而处于阻塞状态。引起进程阻塞的事件可有多种，例如，等待I/O完成、申请缓冲区不能满足、等待信件(信号)等。\n三种基本状态转换：\n就绪→执行：处于就绪状态的任务，当任务调度程序为之分配了处理机后，该任务便由就绪状态转变成执行状态。\n执行→就绪：处于执行状态的任务在其执行过程中，因分配给它的一个时间片已用完而不得不让出处理机，于是任务从执行状态转变成就绪状态。本题选择B选项。\n执行→阻塞：正在执行的任务因等待某种事件发生而无法继续执行时，便从执行状态变成阻塞状态。\n阻塞→就绪：处于阻塞状态的任务，若其等待的事件已经发生，于是任务由阻塞状态转变为就绪状态。\n",
    "options": [
      {
        "key": "A",
        "text": "键盘输入"
      },
      {
        "key": "B",
        "text": "主动让出CPU"
      },
      {
        "key": "C",
        "text": "执行信号量的wait（）操作"
      },
      {
        "key": "D",
        "text": "缺页异常"
      }
    ],
    "correctAnswer": "B",
    "explanation": "<p>执行态：当任务已获得处理机，其程序正在处理执行态机上执行，此时的任务状态称为执行状态。<br>就绪态：当任务已分配到除CPU以外的所有必要的资源，只要获得处理机便可立即执行，这时的任务状态称为就绪状态。<br>阻塞态：正在执行的任务，由于等待某个事件发生而无法执行时，便放弃处理机而处于阻塞状态。引起进程阻塞的事件可有多种，例如，等待I/O完成、申请缓冲区不能满足、等待信件(信号)等。<br>三种基本状态转换：<br>就绪→执行：处于就绪状态的任务，当任务调度程序为之分配了处理机后，该任务便由就绪状态转变成执行状态。<br>执行→就绪：处于执行状态的任务在其执行过程中，因分配给它的一个时间片已用完而不得不让出处理机，于是任务从执行状态转变成就绪状态。本题选择B选项。<br>执行→阻塞：正在执行的任务因等待某种事件发生而无法继续执行时，便从执行状态变成阻塞状态。<br>阻塞→就绪：处于阻塞状态的任务，若其等待的事件已经发生，于是任务由阻塞状态转变为就绪状态。</p>\n",
    "tags": {
      "knowledge": [
        "操作系统",
        "内存管理",
        "进程管理"
      ],
      "chapters": [
        "ch01"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2025年上半年真题第59题"
  },
  {
    "id": "0099",
    "title": "关于架构的问题",
    "type": "single-choice",
    "content": "# 61.黑板架构风格中，用于进行数据处理和计算的构件是（ ）。\n\nA. 知识源\nB. 控制器\nC. 黑板\nD. 中央数据结构\n",
    "options": [
      {
        "key": "A",
        "text": "知识源"
      },
      {
        "key": "B",
        "text": "控制器"
      },
      {
        "key": "C",
        "text": "黑板"
      },
      {
        "key": "D",
        "text": "中央数据结构"
      }
    ],
    "correctAnswer": "A",
    "explanation": "",
    "tags": {
      "knowledge": [
        "软件架构",
        "架构设计"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "medium",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2025年上半年真题第61题"
  },
  {
    "id": "0100",
    "title": "关于测试的问题",
    "type": "single-choice",
    "content": "# 62.一个对象有5个属性，每个属性有2种可能的取值，如果要求对所有值的组合进行测试，则共有（ ）种不同的测试组合。\n\nA. 5\nB. 10\nC. 32\nD. 25\n\n## 解析\n\n已知该对象有5个属性，即完成确定所有属性取值组合这件事需要5个步骤。\n又已知每个属性有2种可能的取值，也就是每一步都有2种不同的方法。\n因为每个步骤有2种方法，一共有5个步骤，所以不同的测试组合数为：2×2×2×2×2=2^5=32（种）\n综上，答案为32，本题选择C选项。\n",
    "options": [
      {
        "key": "A",
        "text": "5"
      },
      {
        "key": "B",
        "text": "10"
      },
      {
        "key": "C",
        "text": "32"
      },
      {
        "key": "D",
        "text": "25"
      }
    ],
    "correctAnswer": "C",
    "explanation": "<p>已知该对象有5个属性，即完成确定所有属性取值组合这件事需要5个步骤。<br>又已知每个属性有2种可能的取值，也就是每一步都有2种不同的方法。<br>因为每个步骤有2种方法，一共有5个步骤，所以不同的测试组合数为：2×2×2×2×2=2^5=32（种）<br>综上，答案为32，本题选择C选项。</p>\n",
    "tags": {
      "knowledge": [
        "软件工程",
        "项目管理"
      ],
      "chapters": [
        "ch04"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2025年上半年真题第62题"
  },
  {
    "id": "0102",
    "title": "关于测试的问题",
    "type": "single-choice",
    "content": "# 64.软件测试中回归测试的目的是（ ）。\n\nA. 预防功能的不完善\nB. 确保修正过程中没有引入新的缺陷\nC. 辅助系统测试\nD. 辅助单元测试\n",
    "options": [
      {
        "key": "A",
        "text": "预防功能的不完善"
      },
      {
        "key": "B",
        "text": "确保修正过程中没有引入新的缺陷"
      },
      {
        "key": "C",
        "text": "辅助系统测试"
      },
      {
        "key": "D",
        "text": "辅助单元测试"
      }
    ],
    "correctAnswer": "B",
    "explanation": "",
    "tags": {
      "knowledge": [
        "软件工程",
        "项目管理"
      ],
      "chapters": [
        "ch04"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 60,
    "source": "2025年上半年真题第64题"
  },
  {
    "id": "0103",
    "title": "智慧教育系统应保护用户的数据隐私，对敏感数据采用密文方式存储...",
    "type": "single-choice",
    "content": "# 65.智慧教育系统应保护用户的数据隐私，对敏感数据采用密文方式存储。这一需求属于（ ）需求。\n\nA. 可用性\nB. 可靠性\nC. 安全性\nD. 性能\n\n## 解析\n\n可靠性：软件系统一定时间内持续无故障运行的能力。\n安全性（security）是指系统在向合法用户提供服务的同时能够阻止非授权用户使用的企图或拒绝服务的能力。安全性又可划分为机密性【信息不泄露给未授权的用户】、完整性【防止信息被篡改】、不可否认性【不可抵赖】及可控性【对信息的传播及内容具有控制的能力】等特性。\n性能（performance）是指系统的响应能力，即要经过多长时间才能对某个事件做出响应，或者在某段时间内系统所能处理的事件的个数。\n保护用户数据隐私和采用密文方式存储正是为了增强系统的安全性，防止敏感数据被泄露或滥用。答案选C。\n",
    "options": [
      {
        "key": "A",
        "text": "可用性"
      },
      {
        "key": "B",
        "text": "可靠性"
      },
      {
        "key": "C",
        "text": "安全性"
      },
      {
        "key": "D",
        "text": "性能"
      }
    ],
    "correctAnswer": "C",
    "explanation": "<p>可靠性：软件系统一定时间内持续无故障运行的能力。<br>安全性（security）是指系统在向合法用户提供服务的同时能够阻止非授权用户使用的企图或拒绝服务的能力。安全性又可划分为机密性【信息不泄露给未授权的用户】、完整性【防止信息被篡改】、不可否认性【不可抵赖】及可控性【对信息的传播及内容具有控制的能力】等特性。<br>性能（performance）是指系统的响应能力，即要经过多长时间才能对某个事件做出响应，或者在某段时间内系统所能处理的事件的个数。<br>保护用户数据隐私和采用密文方式存储正是为了增强系统的安全性，防止敏感数据被泄露或滥用。答案选C。</p>\n",
    "tags": {
      "knowledge": [
        "信息安全",
        "数据安全",
        "系统质量",
        "非功能需求"
      ],
      "chapters": [
        "ch11"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "综合知识"
      ],
      "difficulty": "basic",
      "questionType": "single-choice",
      "source": [
        "历年真题"
      ]
    },
    "points": 1,
    "estimatedTime": 90,
    "source": "2025年上半年真题第65题"
  },
  {
    "id": "0109",
    "title": "案例分析题组 (第71-75题)",
    "type": "case-analysis",
    "content": "71-75. System quality attributes have been of interest to the software community at least since the 1970s. There are a variety of published taxonomies and definitions, and many of them have their own research and practitioner communities. From an（71）perspective, there are three problems with previous discussions of system quality attributes:\n\n*   The definitions provided for an attribute are not operational. It is (72) to say that a system will be modifiable. Every system is modifiable with respect to one set of changes and not modifiable with respect to another. The other attributes are similar.\n    \n*   A focus of discussion is often on which quality a particular aspect belongs to. Is a system failure an aspect of availability, an aspect of security, or an aspect of usability? All three attribute communities would claim ownership of a system failure.\n    \n*   Each attribute community has developed its own (73) . The (74) community has \"events\" arriving at asystem, the security community has \"attacks\" arriving at a system, the availability community has \"failures\" of a system, and the usability community has \"user input\". All of these may actually refer to the same occurrence, but are described using different terms.\n    \n\nA solution to the first two of these problems (nonoperational definitions and overlapping attribute concerns) is to use quality attribute (75) as a means of characterizing quality attributes. A solution to the third problem is to provide a brief discussion of each attribute -- concentrating on its underlying concerns —- to illustrate the concepts that are fundamental to that attribute community.\n\n71.A. architect's B. engineer's C. developer's D. analyst's\n\n72.A. essential B. sufficient C. meaningless D. practical\n\n73.A. framework B. vocabulary C. methodology D. protocol\n\n74.A. performance B. security C. availability D. usability\n\n75.A. metrics\n\nB. requirements  C. patterns D. scenarios\n\n答案：A C B A D\n\n解析：出处：[https://people.ece.ubc.ca/matei/EECE417/BASS/ch04lev1sec3.html](https://people.ece.ubc.ca/matei/EECE417/BASS/ch04lev1sec3.html)\n\n![image.png](https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/yBRq1ZPjkr7PKOdv/img/a997f83c-6381-4976-a966-a30b6aec8109.png)\n\n正确答案如下：\n\nA. architect's（从架构师的视角来看）\n\nC. meaningless（说系统可修改是无意义的）\n\nB. vocabulary（每个属性社区都发展了自己的词汇）\n\nA. performance（性能社区有“事件”到达系统）\n\nD. scenarios（使用质量属性场景作为描述质量属性的手段）\n\n**完整翻译**：  \n系统质量属性自20世纪70年代以来就受到软件社区的关注。目前存在多种已发布的分类和定义，其中许多都形成了各自的研究和实践社区。从（71）架构师的视角来看，先前关于系统质量属性的讨论存在三个问题：\n\n提供的属性定义缺乏可操作性。单纯说系统具有可修改性是（72）无意义的——每个系统针对某一组变更可能可修改，但对另一组变更却不可修改，其他属性也是如此。\n\n讨论焦点常常集中在某个特定方面属于哪种质量属性。系统故障属于可用性、安全性还是可用性范畴？这三个属性社区可能都会声称对系统故障拥有管辖权。\n\n每个属性社区都发展出了自己的（73）术语体系。（74）性能社区将到达系统的称为\"事件\"，安全社区称为\"攻击\"，可用性社区称为\"故障\"，可用性社区则称为\"用户输入\"。这些实际上可能指向同一个现象，却使用了不同的术语描述。\n\n针对前两个问题（非操作性定义和属性关注点重叠）的解决方案是采用质量属性（75）场景作为描述质量属性的手段。针对第三个问题的解决方案是对每个属性进行简要讨论——聚焦其核心关注点——以阐释该属性社区的基本概念。\n\n# 案例分析\n\n\n某公司开发一个在线大模型训练平台，支持 Python 代码编写、模型训练和部署，用户通过 python 编写模型代码，将代码交给系统进行模型代码的解析，最终由系统匹配相应的计算机资源进行输出，用户不需要关心底层硬件平台，在开发该平台架构时，设计了以下质量属性场景：\n\n1.  当系统发生错误，在不影响正常运行时，自动发送一个错误通知给系统管理员\n    \n2.  为方便用户操作，平台设计了满足一般用户使用的快捷键设置\n    \n3.  系统界面能够适配用户自身使用的设备的屏幕尺寸比例\n    \n4.  用户提交训练任务时平台应该在一分钟内提供硬件和资源来执行任务\n    \n5.  当平台数据库发生故障时，可以在20 分钟内切换到备用库\n    \n6.  系统发生故障时，要能提供操作日志、调试日志等记录便于追踪审计\n    \n7.  系统发生故障时应在15分钟内修复\n    \n8.  系统应能提供远程测试，供远程用户进行远程修改，该功能仅提供给系统注册用户使用\n    \n9.  系统支持对某服务功能进行扩展，修改操作应该在3 天内完成\n    \n10.  系统支持多个国家的语言，并且能够一键切换不同的语言\n    \n11.  系统编写有专门的接口代码来接收用户编写的模型并向计算机资源进行输出\n    \n12.  当使用平台的用户数量增加时，平台能够自动扩容以维持高质量服务\n    \n\n**问题1**（12分）：写出题目中的 a-l 共12个场景对应的质量属性分别是什么？\n\n**问题2:**\n\n1.  根据题目描述，完成下列解释器风格架构图的填空。6分\n    \n    ![image.png](https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/yBRq1ZPjkr7PKOdv/img/b3c282f2-6f0d-4b09-9e18-296bb74737b3.png)\n    \n2.  请简要说明该平台为什么适合用解释器风格？7分\n    \n\n\n**问题1：**\n\n1.  可维护性；\n    \n2.  易用性；\n    \n3.  易用性；\n    \n4.  性能;\n    \n5.  可用性;\n    \n6.  安全性;\n    \n7.  可用性;\n    \n8.  可测试性;\n    \n9.  可修改性;\n    \n10.  易用性;\n    \n11.  互操作性;\n    \n12.  可伸缩性;\n    \n\n**问题2：**\n\n1.（1）程序执行的当前状态（2）解释器引擎（3）解释器引擎的内部状态\n\n2.  本题主要采分点在于回答出解释器风格的优点，即：\n    \n\n解释器风格可以构建一个运行环境，在这个环境上，可以解释和执行自定的一些语言和规则，题目中用户通过 python 编写模型代码，交由系统进行解析执行，正好是符合解释器模型的应用范围。\n\n\n某公司拟开发一个医药领域的智能问答系统，以帮助用户快速准确的获取疾病病因、治疗方式、治疗周期、常用药物、症状表现和药物企业等医药领域信息。\n\n基于项目需求，公司召开了项目讨论会。会上，张工指出基于关键词的中心化检索技术已无法满足用户获取医药领域信息的需求，应从各种医药信息网站网页数据中爬取数据构建医药领域知识图谱，并基于知识图谱实现信息的查询和智能问答。\n\n**问题1**：医药知识图谱智能问答系统架构图（图为回忆版）填空，从以下选项中选择合适的选项填入图中空（1）—（9）\n\n可选项：（9分）\n\n（1）网络层（2）数据层（3）业务层（4）知识层\n\n（5)  关系获取（6）实体获取（7）网页采集（8）知识管理\n\n（9）知识清洗（10）数据清洗 （11）结构化数据（12）数据收集\n\n（13）语句解析（14）意图识别（15）知识检索（16）知识抽取\n\n![image.png](https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/yBRq1ZPjkr7PKOdv/img/a980ba33-c307-45d5-82ee-b7235fc4d141.png)\n\n**问题2：**该知识图谱的实现使用了爬虫框架 scrapy，该框架图如下所示，请填写图中空（1）-（3)（3分）并解释异步IO的特点和优势（7分）。\n\n![image.png](https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/yBRq1ZPjkr7PKOdv/img/ea516ee8-5286-460e-a2f7-8cb1d08cce8b.png)\n\n**问题3**：请说一下知识图谱的构建和智能问答如何存储实现。（6分）\n\n\n**问题1：**（1）结构化数据 （2）数据收集（3）数据清洗\n\n（4）知识管理 （5）知识层（6）知识检索\n\n（7） 意图识别 （8）语句解析（9）知识抽取 （10）业务层\n\n**问题2：**(1) scheduler   (2) scrapy engine (3) ltem Pipeline\n\n异步 I/O 的核心特点是**非阻塞**和**事件驱动**。其核心优势在于：\n\n1.  **高并发**：单线程即可处理海量连接。\n    \n2.  **高性能与高吞吐量**：极大减少了线程阻塞和上下文切换的开销，资源利用率极高。\n    \n3.  **低资源开销**：避免了创建大量线程所需的内存和CPU成本。\n    \n\n**问题3：**\n\n*   **存储模型**：最常用的是**图数据库**，因为它能最直观地表示“实体-关系-实体”的三元组结构。\n    \n*   **常用数据库**：**Neo4j**（最流行）、**Nebula Graph**（国产开源）、**JanusGraph**、**TigerGraph**等。有时也会使用**RDF三元组库**（如Jena）或甚至适配后的关系数据库。\n    \n*   简单来说，**构建知识图谱是“写”入知识，而智能问答是“读”出知识**。两者通过**图数据库**这一核心存储与查询引擎紧密相连。\n    \n*   备选：问答（RAG）使用向量数据库？\n    \n\n**解析：**\n\n类似的原文：图3-2\n\n![image.png](https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/yBRq1ZPjkr7PKOdv/img/b962dd30-be99-44b4-aa87-574cee6e360e.png)\n\n[请至钉钉文档查看附件《基于医药知识图谱的智能问答系统的设计与实现.pdf》](https://alidocs.dingtalk.com/i/nodes/93NwLYZXWyxXroNzCYQddaB78kyEqBQm?iframeQuery=anchorId%3DX02mf8i0ugupa9gjf7jy89)\n\n\n**问题1：**在 redis 主从复制，读写分离的架构中，主从库第一次同步的架构图如下，请填写图中空缺处。（10分）\n\n![image.png](https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/yBRq1ZPjkr7PKOdv/img/798b85f4-85a9-41f3-9711-68ddec677f58.png)\n\n**问题2**：主从库第一次同步完成之后，后面如果有数据更新是如何同步的，请填写图中空缺处。（6分）\n\n![image.png](https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/yBRq1ZPjkr7PKOdv/img/d4564066-9c6d-47c1-955d-ca36b8d41a99.png)\n\n**问题3**：数据持久化在系统非常重要，系统发生故障的时候需要进行数据恢复，请列举出 redis 中数据持久化的两种方式，并论述其优缺点。（9分）\n\n\n**问题1**：\n\n![image.png](https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/yBRq1ZPjkr7PKOdv/img/6e0050a0-3bd1-4358-876b-cbccada5fbaf.png)\n\n（1）请求数据同步 \n\n（2）生成RDB\n\n（3）记录RDB期间的所有命令到repl\\_baklog\n\n（4）发送RDB文件\n\n（5）发送repl\\_baklog中的命令\n\n**问题2**: \n\n![image.png](https://alidocs.oss-cn-zhangjiakou.aliyuncs.com/res/yBRq1ZPjkr7PKOdv/img/565022bc-f724-4efc-869e-ac892a058078.png)\n\n（1）去repl\\_baklog（**复制积压缓冲区**）中获取offset后的数据\n\n（2）发送offset后的命令\n\n（3）执行命令\n\n**问题3**：Redis 提供 RDB 和 AOF 两种持久化机制，其核心区别与对比如下：\n\n*   **RDB (Redis Database) 原理**：定时生成内存数据的二进制快照，保存为 dump.rdb 文件。\n    \n\n**优点**\n\n高性能： 二进制压缩存储，恢复速度极快 （适合大数据量场景）\n\n低磁盘占用： RDB 文件紧凑（比 AOF 小 50%~70%）\n\n容灾友好 ：单文件备份，便于传输到异地（如SCP 到远程服务器）\n\n最小化阻塞： BGSAVE 仅 fork 瞬间阻塞（通常毫秒级）\n\n**缺点**\n\n数据丢失风险：两次备份间的数据可能丢失（如5分钟备份周期宕机，丢5分钟数据）\n\nFork 内存开销 ：fork 子进程时内存翻倍（10GB数据一临时占用 20GB）\n\n实时性差：不支持秒级持久化（最低配置 save 60 10000 = 60 秒内 1万次改动才触发）\n\n*   **AOF (Append Only File）原理**：记录所有写操作命令（文本格式），通过重放命令恢复数据。\n    \n\n**优点**\n\n数据零丢失： 配置 appendfsync always 每次写命令刷盘（最高可靠性）\n\n可读性强：文本格式记录操作历史（可用于审计或手动修复）\n\n故障恢复灵活： 支持 redis-check-aof 工具修复损坏的 AOF 文件 \n\n自动重与压缩： BGREWRITEAOF 重写冗余命令（如100次 INCR -> 1次 SET)\n\n**缺点**\n\n文件体积大：相同数据集 AOF 文件通常远大于 RDB（需定期重写压缩）\n\n恢复速度慢 ：重放命令比加载 RDB 慢数倍（10GB数据可能需要分钟级恢复）\n\n写入性能开销：always 模式每次写命令刷盘，性能下降 50%+\n\n潜在 Bug 风险： 重放 AOF 时若命令存在逻辑错误（如依赖中问状态），可能导致数据不一致\n\n**解析**：\n\n| 持久化机制 | 说明 | 优点 | 缺点 | 适用场景 |\n| --- | --- | --- | --- | --- |\n| RDB（Redis Database） | 在指**定的时间间隔内，将内存中的数据集快照写入磁盘**，恢复时将快照文件直接读到内存。 | 1. 适合大规模数据恢复<br>2. **对性能影响小**，fork子进程进行持久化，主进程继续处理请求<br>3. **文件紧凑**，适合备份和灾难恢复 | 1. **可能会丢失最后一次快照后的数据**<br>2. fork子进程时，内存不足可能影响性能<br>3. 保存RDB文件时，**如果数据集大，时间会较长** | 1. **可以容忍一定数据丢失**<br>2. **大规模数据恢复场景**<br>3. 对数据恢复速度要求较高 |\n| AOF（Append Only File） | **以日志形式记录每个写操作，追加到AOF文件**，重启时重新执行这些命令恢复数据。 | 1. **数据安全性高**，可配置不同同步策略，最多丢失1秒数据<br>2. AOF文件是**有序的写操作日志**，易读，可修改修复 | 1. **AOF文件通常比RDB文件大**<br>2. **性能比RDB稍差**，因为要不断记录写操作<br>3. 恢复速度比RDB慢 | 1. **对数据安全性要求高**，不能容忍数据丢失<br>2. **对恢复速度要求不苛刻** |\n| RDB + AOF（版本4.0新增的机制） | **同时使用RDB和AOF持久化。** | 兼具RDB和AOF的优点，既有RDB的快速恢复能力，又有AOF的数据安全性。 | 1. 占用更多磁盘空间<br>2. 配置和管理相对复杂 | **对数据安全性和恢复速度都有较高要求的场景** |\n\n\n近年来，Al技术得到快速发展，其技术促使了智能终端软硬架构的全面升级。云端Al 和端侧Al最大差别在于算力是在云侧，还是端侧计算的问题。某装备研制企业为了适应产品的智能化升级换代，要求研发部门开展端侧 Al技术的研究工作，王工主要承担了智能终端的资源池化设计工作，并就资源池的架构设计提出了自己的见解。在研发部门组织的讨论会上，王工的独到见解得到技术主管的认可。\n\n针对智能终端端侧 Al 的需求，王工在讨论会上提出，应开展资源池架构设计工作。资源池可高效管理和分配计算、存储和网络等资源，其核心目标是通过集中化管理、动态调度和自动化运维，提升资源利用率、弹性和可靠性。资源池架构设计除需要兼顾计算、存储、网络等资源的动态管理与优化外，同时应满足低延迟、高能效和隐私安全等核心需求。\n\n**问题1**：（6分）请给出云侧 Al 和端侧Al 的定义，并说明端侧 Al 相比于云侧 Al 的优势是什么？\n\n**问题 2：**（7分）资源池的核心架构设计需要考虑（a）资源抽象与异构计算、（b）动态调度与能效优化、(c)安全与隔离机制等三个方面，请判断下表中空（1）-（7）分别属于哪个方面，并使用 abc 进行填空。\n\n| 序号 | 设计方法 | 类别 |\n| --- | --- | --- |\n| 1 | 基于任务优先级、能耗调值和硬件亲和性（如 NPU 加速）动态分配资源 | (1) |\n| 2 | 通过虚拟化或容器技术隔离多用户任务，防止资源争抢 | (2) |\n| 3 | 将端侧设备的 CPU、GPU、 NPU 等异构算力统一抽象为虚拟资源池，屏蔽硬件差异，实现灵活调度 | (3) |\n| 4 | 本地数据处理避免敏感信息上传云端，结合硬件级安全模块实现端到端加密 | (4) |\n| 5 | 根据负载自动调整算力分配 | (5) |\n| 6 | 运行计算优化 | (6) |\n| 7 | 通过模型蒸馏、重化（应为量化）和稀疏编码压缩模型体积，适配端侧资源限制 | (7) |\n\n**问题3**：关于集中式资源池、分布式资源池以及混合型资源池对比表如下，请填写表中空(1)-(6)。（12分）\n\n| 特性 | 集中式资源池 | 分布式资源池 | 混合型资源池 |\n| --- | --- | --- | --- |\n| 核心架构 | 单中心化 | (1) | 融合架构 |\n| 资源调度与管理 | (2) | 分布式/联邦式管理 | 统一视图，分层/分级管理 |\n| 数据存储 | 中心节点存储 | 分散存储 | (3) |\n| 扩容能力 | 低 | 高 | (4) |\n| 管理复杂性 | (5) | 高 | 高 |\n| 规模 | 高 | (6) | 高 |\n\n因为集中式资源池实时性高，并且目前系统规模大，所以李工决定采用集中式资源池，但是王工指出李工的方案有三个缺陷。请你描述一下三个缺陷是什么？\n\n\n**问题1：**云侧 AI：Al模型部署在云端服务器，终端设备通过网络传输数据至云端处理并返回结果。\n\n端侧 Al： Al模型直接部署在终端设备（手机汽车/IoT设备)，数据在本地完成计算。\n\n端侧 Al的优势：超低延迟（实时响应)、数据隐私和安全（原始数据本地处理，仅输出结果）、离线可用、带宽和成本低、能效提升（本地运算免传输，专用芯片能效高）\n\n**问题2**：\n\n| 序号 | 设计方法 | 类别 | 分类理由 |\n| --- | --- | --- | --- |\n| 1 | 基于任务优先级、能耗调值和硬件亲和性（如 NPU 加速）动态分配资源 | (1)b | 核心是动态资源分配，考虑优先级、能耗和硬件特性，属于动态调度与能效优化。 |\n| 2 | 通过虚拟化或容器技术隔离多用户任务，防止资源争抢 | (2)c | 直接涉及任务隔离，防止争抢，属于安全与隔离机制。 |\n| 3 | 将端侧设备的 CPU、GPU、 NPU 等异构算力统一抽象为虚拟资源池，屏蔽硬件差异，实现灵活调度 | (3)a | 核心是将异构硬件抽象为统一资源池，属于资源抽象与异构计算。 |\n| 4 | 本地数据处理避免敏感信息上传云端，结合硬件级安全模块实现端到端加密 | (4)c | 重点在数据安全和隐私保护（本地处理、加密），属于安全与隔离机制。 |\n| 5 | 根据负载自动调整算力分配 | (5)b | 基于负载动态调整资源，属于动态调度与能效优化。 |\n| 6 | 运行计算优化 | (6)b | 指运行时计算优化（如性能或能效优化），属于动态调度与能效优化的范畴。 |\n| 7 | 通过模型蒸馏、重化（应为量化）和稀疏编码压缩模型体积，适配端侧资源限制 | (7)b | 模型压缩技术（如蒸馏、量化、稀琉编码）旨在减少资源使用，优化能效，属于动态调度与能效优化。 |\n\n**问题3**：\n\n（1）多中心化或去中心化\n\n（2）集中管理\n\n（3）核心数据在中心，热数据或低延迟需求数据在边缘/本地。\n\n（4）高\n\n（5）低\n\n（6）低\n\n集中式资源池的三个缺点，其缺点如下，随便挑三个即可：\n\n*   单点故障风险：中心故障影响全局。\n    \n*   网络延迟高：远距离用户访问体验差。\n    \n*   带宽瓶颈：所有流量汇聚到中心，出口带宽压力大。\n    \n*   扩展限制：物理空间、电力、冷却可能限制单点扩展。\n    \n*   地理覆盖局限：难以满足全球用户的低延迟需求。\n    \n\n\n题目背景是农产品溯源使用区块链\n\n**问题1**：区块链的六个层次分别是什么，并简单介绍（12分）\n\n**问题2**：在区块链系统中，有三种人员：信息填写人员、核对人员、审核人员，请用400 字以内文字说明三种不同人员的操作流程（9分）\n\n**问题3**：介绍下什么是智能合约，并说明智能合约包含哪三方面（4分）\n\n\n**问题1：**区块链技术体系可分为六个层级，通过多层协作实现去中心化特性与安全可信的运行机制：\n\n*   数据层：封装底层数据结构与安全技术，包含区块的链式结构、哈希函数、Merkle 树、时间戳及非对称加密技术, 确保数据不可篡改性和完整性。区块通过保存前序哈希值形成链式存储，交易数据采用双重加密保障隐私。\n    \n*   网络层：采用 P2P 组网技术构建分布式自治系统，节点通过传播机制同步新区块数据，依靠验证机制确认交易合法性。公有链、联盟链和私有链在该层实现不同级别的中心化控制。\n    \n*   共识层：集成 PoW. PoS、DPoS 等算法解决分布式网络记账权分配问题，通过超过 51%节点验证机制确保全网络账本一致性。共识机制直接影响系统的吞吐量与安全性。\n    \n*   激励层：设计经济模型驱动节点参与验证，如比特币的挖矿奖励和交易手续费机制。通过代币发行与分配规则维护网络生态的可持续性。\n    \n*   合约层：部署智能合约实现自动化执行，通过预编程脚本在满足条件时触发资产转移、合约清算等操作。以太坊等平台在该层扩展了图灵完备的编程能力。\n    \n*   应用层：面向具体场景开发DApp，涵盖金融支付（跨境结算）、供应链管理（农产品溯源）、数字身份等垂直领域。该层直接承载用户交互与业务逻辑实现。\n    \n\n**问题2**：\n\n1.  **信息填写人员**\n    \n    ① 登录区块链系统录入农产品基础数据（批次、产地、检测报告等)；\n    \n    ② 上传原始凭证（如检测机构盖章文件）至IPFS 分布式存储；\n    \n    ③ 调用智能合约生成初始哈希值，将关键信息上链；\n    \n    ④ 系统自动生成带时间戳的区块链存证编号。\n    \n2.  **核对人员**\n    \n    ① 接收系统推送的待核验数据包；\n    \n    ② 比对上链数据与原始凭证的一致性（通过哈希值校验）；\n    \n    ③ 实地抽查或视频核验生产环节真实性；\n    \n    ④ 使用多重签名钱包对通过核验的数据包进行二级加密签名，触发智能合约进入审核队列。\n    \n3.  **审核人员**\n    \n\n① 调取前两级操作的全流程区块链日志；\n\n② 复核数据修改记录（需超过2/3 节点共识）；\n\n③ 最终确认时激活时间锁功能，使该批次数据进入只读状态；\n\n④ 颁发可验证数字凭证 (VC)，同步至农业监管链节点。所有操作痕迹均通过非对称加密永久上链。\n\n**问题3**: 智能合约是一种以代码形式编写的程序，存储在区块链上，用于自动执行合约条款，无需第三方介入。其核心作用包括自动化履约、确保交易透明性和不可篡改性。\n\n智能合约包含以下三方面：\n\n*   自动化履约：智能合约可以在满足预设条件时自动执行交易或协议，减少人工干预和信任成本。例如，在预付式消费场景中，消费者预付的资金可以通过智能合约锁定，按照服务进度分阶段释放给商家，确保资金安全。\n    \n*   透明性和不可篡改性：智能合约的代码是公开的，任何人都可以验证其内容和执行结果。此外，由于区块链的分布式账本和共识机制，一旦合约被记录在区块上，其内容就无法被篡改，保证了交易的不可篡改性。\n    \n*   去中心化和安全性：智能合约依赖于区块链的去中心化架构和加密技术，确保交易的安全性和可信度。合约代码部署在链上节点，满足条件时由网络节点通过共识机制验证并执行，将结果记录至区块\n    \n\n# 论文写作\n\n\n软件测试是保障软件质量的重要手段，随着人工智能技术的快速发展，AI辅助的测试用例生成成为现代软件工程中的研究与应用热点。通过利用大语言模型（如阿里通义干问、DeepSeek等）生成和扩展测试用例，可以大幅提升测试设计效率和覆盖率。该方法通常包括测试用例基础库构建、用例标准化与文档化、大模型训练与微调、无效用例过滤与扩展库生成，最终实现基于用例库指导的TDD（测试驱动开发）过程。其中，用例标准化是关键环节，需将测试用例拆分为用例名称、用例描述、输入、前置条件、后置条件、期望结果与异常处理等结构化信息，便于AI模型理解与生成。 请围绕\"软件测试方法及应用”论题，依次从以下三个方面进行论述：\n\n1.  概要叙述你参与管理和开发的软件测试项目以及你在其中所承担的主要工作。\n    \n2.  简要分析Al测试用例生成的一般处理流程，包括测试用例库构建、标准化与文档化、模型训练与微调、拓展用例库生成等关键步骤的内容与作用。\n    \n3.  具体阐述你参与管理和开发的项目是如何应用AI测试用例生成方法支持TDD开发的，并分析其在实际应用中的优势与挑战。\n    \n\n\n在现代复杂系统中，数据类型日益多样化，传统单一模型的数据管理方式已难以满足业务需求。多模型数据管理技术应运而生，其核心,思想是在同一数据库平台上支持多种数据模型（如关系模型、文档模型、图模型、键值模型等）的统一存储、查询与管理。这种方式不仅提升了系统的灵活性与扩展性，还降低了系统复杂性与运维成本，实现了跨模型数据的高效整合与协同处理。 请围绕“多模型数据管理技术及其应用”论题，依次从以下三个方面进行论述：\n\n1.  概要叙述你参与管理和开发的软件项目以及你在其中所承担的主要工作。\n    \n2.  简要说明什么是多模型数据及其统一管理的技术优势，包括数据一致性、开发效率、系统扩展性等方面。\n    \n3.  具体阐述你参与管理和开发的项目中，如何设计和实现多模型数据库系统以实现对不同数据类型的统一管理，并分析其在实际业务场景中的应用效果与优化思路。\n    \n\n\n事件驱动架构 (Event-Driven Architecture，EDA)是一种以事件为中心的架构模式，广泛应用于现代分布式系统和异步通信场景中。它通过事件的发布与订阅机制，实现系统中各组件之间的松耦合，提高系统的可扩展性和响应速度。事件驱动架构在处理高并发、大规模用户请求、实时反馈等场景中具有明显优势，已逐渐成为微服务、云原生等现代软件架构的重要组成部分。\n\n请围绕\"事件驱动架构在软件开发中的应用”论题，依次从以下三个方面进行论述：\n\n1.  概要叙述你参与管理和开发的软件项目以及你在其中所承担的主要工作。\n    \n2.  简要说明事件驱动架构的概念、特点及其全过程设计思想。\n    \n3.  结合项目实践，具体说明系统在分析、设计、开发阶段如何应用事件驱动架构。\n    \n\n\n请围绕\"负载均衡设计技术\"论题，依次从以下三个方面进行论述：\n\n1.  概要叙述你参与管理和开发的软件项目以及你在其中所承担的主要工作。\n    \n2.  简要分析静态负载均衡策略、动态负载均衡策略及基于场景的负载均衡策略的基本原理、常见方法及适用场景。\n    \n3.  具体阐述你参与管理和开发的项目是如何结合上述负载均衡技术实现系统性能优化的。\n",
    "options": [
      {
        "key": "B",
        "text": "requirements  C. patterns D. scenarios"
      },
      {
        "key": "A",
        "text": "architect's（从架构师的视角来看）"
      },
      {
        "key": "C",
        "text": "meaningless（说系统可修改是无意义的）"
      },
      {
        "key": "B",
        "text": "vocabulary（每个属性社区都发展了自己的词汇）"
      },
      {
        "key": "A",
        "text": "performance（性能社区有“事件”到达系统）"
      },
      {
        "key": "D",
        "text": "scenarios（使用质量属性场景作为描述质量属性的手段）"
      }
    ],
    "correctAnswer": "",
    "explanation": "",
    "tags": {
      "knowledge": [
        "案例分析"
      ],
      "chapters": [
        "ch06"
      ],
      "years": [
        "2025-1"
      ],
      "subjects": [
        "案例分析"
      ],
      "difficulty": "hard",
      "questionType": "case-analysis",
      "source": [
        "历年真题"
      ]
    },
    "points": 15,
    "estimatedTime": 900,
    "source": "2025年上半年真题第71-75题"
  }
];

export const questionIndices = {
  "chapters": {
    "ch06": [
      109,
      99,
      94,
      90,
      83,
      81,
      79,
      75,
      74,
      73,
      72,
      69,
      68,
      65,
      58,
      54,
      53,
      52,
      51,
      50,
      47,
      39,
      30,
      29,
      27,
      26,
      25,
      24,
      20,
      19,
      18,
      17,
      16,
      9
    ],
    "ch11": [
      103,
      86,
      44,
      4,
      3,
      2,
      1
    ],
    "ch04": [
      102,
      100,
      88,
      85,
      80,
      77,
      64,
      61,
      41,
      22,
      21
    ],
    "ch01": [
      97,
      62,
      56,
      49,
      40,
      7,
      5
    ],
    "ch03": [
      93,
      82,
      42,
      36,
      13,
      6
    ],
    "ch05": [
      67,
      66,
      14,
      12
    ],
    "ch07": [
      57,
      33
    ]
  },
  "years": {
    "2025-1": [
      109,
      103,
      102,
      100,
      99,
      97,
      94,
      93,
      90,
      88,
      86,
      85,
      83,
      82,
      81,
      80,
      79,
      77,
      75,
      74,
      73,
      72,
      69,
      68,
      67,
      66,
      65,
      64,
      62,
      58,
      57,
      56,
      54,
      53,
      52,
      51,
      50,
      47,
      44
    ],
    "2024-2": [
      61,
      49,
      42,
      41,
      40,
      39,
      36,
      33,
      30,
      29,
      27,
      26,
      25,
      24,
      22,
      21,
      20,
      19,
      18,
      17,
      16,
      14,
      13,
      12,
      9,
      7,
      6,
      5,
      4,
      3,
      2,
      1
    ]
  },
  "difficulty": {
    "hard": [
      109,
      88,
      81,
      79,
      64,
      58,
      41,
      30,
      25,
      24,
      18
    ],
    "basic": [
      103,
      102,
      100,
      97,
      94,
      93,
      90,
      82,
      80,
      75,
      74,
      73,
      72,
      69,
      68,
      67,
      66,
      65,
      62,
      57,
      54,
      52,
      51,
      50,
      49,
      47,
      44,
      42,
      40,
      39,
      36,
      33,
      29,
      27,
      26,
      22,
      21,
      20,
      19,
      17,
      16,
      14,
      9,
      7,
      6,
      5,
      4,
      3,
      2,
      1
    ],
    "medium": [
      99,
      86,
      85,
      83,
      77,
      61,
      56,
      53,
      13,
      12
    ]
  },
  "questionType": {
    "case-analysis": [
      109
    ],
    "single-choice": [
      103,
      102,
      100,
      99,
      97,
      94,
      93,
      90,
      88,
      86,
      85,
      83,
      82,
      81,
      80,
      79,
      77,
      75,
      74,
      73,
      72,
      69,
      68,
      67,
      66,
      65,
      64,
      62,
      61,
      58,
      57,
      56,
      54,
      53,
      52,
      51,
      50,
      49,
      47,
      44,
      42,
      41,
      40,
      39,
      36,
      33,
      30,
      29,
      27,
      26,
      25,
      24,
      22,
      21,
      20,
      19,
      18,
      17,
      16,
      14,
      13,
      12,
      9,
      7,
      6,
      5,
      4,
      3,
      2,
      1
    ]
  },
  "knowledge": {
    "案例分析": [
      109
    ],
    "信息安全": [
      103,
      93,
      86,
      67,
      66,
      44,
      30,
      12,
      4,
      3,
      2,
      1
    ],
    "数据安全": [
      103,
      93,
      86,
      67,
      66,
      30,
      12,
      4,
      3,
      2,
      1
    ],
    "系统质量": [
      103,
      77,
      61,
      57,
      53,
      30,
      13
    ],
    "非功能需求": [
      103,
      77,
      61,
      57,
      53,
      30,
      13
    ],
    "软件工程": [
      102,
      100,
      88,
      85,
      80,
      79,
      77,
      65,
      64,
      61,
      41,
      22,
      21,
      13
    ],
    "项目管理": [
      102,
      100,
      88,
      85,
      80,
      77,
      64,
      61,
      41,
      22,
      21,
      13
    ],
    "软件架构": [
      99,
      83,
      69,
      53,
      52,
      40,
      33,
      30,
      29,
      25,
      24,
      18,
      16
    ],
    "架构设计": [
      99,
      83,
      69,
      53,
      52,
      40,
      33,
      30,
      29,
      25,
      24,
      18,
      16
    ],
    "操作系统": [
      97,
      62,
      56,
      49,
      40,
      7,
      5
    ],
    "内存管理": [
      97,
      62,
      56,
      49,
      40,
      7,
      5
    ],
    "进程管理": [
      97,
      62,
      56,
      49,
      40,
      7,
      5
    ],
    "数据库系统": [
      94,
      77,
      75,
      68,
      67,
      66,
      64,
      47,
      39,
      36,
      27,
      26,
      20,
      14,
      12,
      9
    ],
    "数据库设计": [
      94,
      77,
      75,
      68,
      67,
      66,
      64,
      47,
      39,
      36,
      27,
      26,
      20,
      14,
      12,
      9
    ],
    "通信技术": [
      93,
      54,
      40,
      36,
      13
    ],
    "软件建模": [
      90
    ],
    "UML": [
      90
    ],
    "计算机网络": [
      82,
      74,
      56,
      42,
      17,
      13,
      6
    ],
    "网络协议": [
      82,
      74,
      56,
      42,
      17,
      13,
      6
    ],
    "法律法规": [
      81,
      44
    ],
    "知识产权": [
      81
    ],
    "开发模型": [
      79
    ],
    "数学基础": [
      73,
      51,
      50,
      19
    ],
    "集合论": [
      73,
      19
    ],
    "面向对象": [
      72
    ],
    "继承机制": [
      72
    ],
    "逆向工程": [
      65
    ],
    "企业管理": [
      58
    ],
    "系统架构": [
      58
    ],
    "线性规划": [
      51
    ],
    "数据分析": [
      50
    ]
  },
  "subjects": {
    "案例分析": [
      109
    ],
    "综合知识": [
      103,
      102,
      100,
      99,
      97,
      94,
      93,
      90,
      88,
      86,
      85,
      83,
      82,
      81,
      80,
      79,
      77,
      75,
      74,
      73,
      72,
      69,
      68,
      67,
      66,
      65,
      64,
      62,
      61,
      58,
      57,
      56,
      54,
      53,
      52,
      51,
      50,
      49,
      47,
      44,
      42,
      41,
      40,
      39,
      36,
      33,
      30,
      29,
      27,
      26,
      25,
      24,
      22,
      21,
      20,
      19,
      18,
      17,
      16,
      14,
      13,
      12,
      9,
      7,
      6,
      5,
      4,
      3,
      2,
      1
    ]
  },
  "source": {
    "历年真题": [
      109,
      103,
      102,
      100,
      99,
      97,
      94,
      93,
      90,
      88,
      86,
      85,
      83,
      82,
      81,
      80,
      79,
      77,
      75,
      74,
      73,
      72,
      69,
      68,
      67,
      66,
      65,
      64,
      62,
      61,
      58,
      57,
      56,
      54,
      53,
      52,
      51,
      50,
      49,
      47,
      44,
      42,
      41,
      40,
      39,
      36,
      33,
      30,
      29,
      27,
      26,
      25,
      24,
      22,
      21,
      20,
      19,
      18,
      17,
      16,
      14,
      13,
      12,
      9,
      7,
      6,
      5,
      4,
      3,
      2,
      1
    ]
  }
};

export const displayMaps = {
  "chapters": {
    "ch06": "第06章",
    "ch11": "第11章",
    "ch04": "第04章",
    "ch01": "第01章",
    "ch03": "第03章",
    "ch05": "第05章",
    "ch07": "第07章"
  },
  "years": {
    "2025-1": "2025-1",
    "2024-2": "2024-2"
  },
  "difficulty": {
    "hard": "困难",
    "basic": "基础",
    "medium": "中等"
  },
  "questionType": {
    "case-analysis": "case-analysis",
    "single-choice": "single-choice"
  },
  "knowledge": {
    "案例分析": "案例分析",
    "信息安全": "信息安全",
    "数据安全": "数据安全",
    "系统质量": "系统质量",
    "非功能需求": "非功能需求",
    "软件工程": "软件工程",
    "项目管理": "项目管理",
    "软件架构": "软件架构",
    "架构设计": "架构设计",
    "操作系统": "操作系统",
    "内存管理": "内存管理",
    "进程管理": "进程管理",
    "数据库系统": "数据库系统",
    "数据库设计": "数据库设计",
    "通信技术": "通信技术",
    "软件建模": "软件建模",
    "UML": "UML",
    "计算机网络": "计算机网络",
    "网络协议": "网络协议",
    "法律法规": "法律法规",
    "知识产权": "知识产权",
    "开发模型": "开发模型",
    "数学基础": "数学基础",
    "集合论": "集合论",
    "面向对象": "面向对象",
    "继承机制": "继承机制",
    "逆向工程": "逆向工程",
    "企业管理": "企业管理",
    "系统架构": "系统架构",
    "线性规划": "线性规划",
    "数据分析": "数据分析"
  },
  "subjects": {
    "案例分析": "案例分析",
    "综合知识": "综合知识"
  },
  "source": {
    "历年真题": "历年真题"
  }
};

export const questionMetadata = {
  "totalQuestions": 71,
  "lastUpdated": "2025-09-22T11:39:23.229Z",
  "categories": {
    "hard": 11,
    "basic": 50,
    "medium": 10
  }
};
